/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.ALU" *)
module ALU(load_wb, branching, jump, Ra, immediate, pc, Rb, reg_addr_in, inst_type, inst_type1, inst_type2, inst_type3, shamt, web, result, wmask, reg_addr_out, csb);
  (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
  wire \$1 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:122" *)
  wire \$101 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:125" *)
  wire \$103 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:126" *)
  wire \$105 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$107 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
  wire \$109 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$11 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
  wire \$111 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
  wire \$113 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$115 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
  wire \$117 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$119 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
  wire \$121 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
  wire \$123 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
  wire \$125 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
  wire \$127 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
  wire \$129 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
  wire \$131 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
  wire \$133 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:79" *)
  wire \$135 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:80" *)
  wire [31:0] \$137 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:81" *)
  wire \$139 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:82" *)
  wire [31:0] \$141 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
  wire \$143 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:90" *)
  wire \$145 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:92" *)
  wire [31:0] \$147 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:92" *)
  wire [9:0] \$148 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
  wire \$15 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
  wire \$151 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:101" *)
  wire \$153 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$155 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:110" *)
  wire \$157 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:112" *)
  wire [32:0] \$159 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:112" *)
  wire [32:0] \$160 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
  wire \$162 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:121" *)
  wire \$164 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:122" *)
  wire \$166 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:124" *)
  wire [32:0] \$168 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:124" *)
  wire [32:0] \$169 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
  wire \$17 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:125" *)
  wire \$171 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:126" *)
  wire \$173 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$175 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
  wire \$177 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:137" *)
  wire [32:0] \$179 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:137" *)
  wire [32:0] \$180 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
  wire \$182 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:143" *)
  wire \$184 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
  wire \$186 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:152" *)
  wire [31:0] \$188 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$19 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:152" *)
  wire [31:0] \$190 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:152" *)
  wire [31:0] \$192 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:152" *)
  wire [31:0] \$194 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:152" *)
  wire [31:0] \$196 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
  wire \$198 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:158" *)
  wire [31:0] \$200 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
  wire \$202 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:165" *)
  wire [31:0] \$204 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
  wire \$206 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:167" *)
  wire [32:0] \$208 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:167" *)
  wire [32:0] \$209 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
  wire \$21 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$211 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:110" *)
  wire \$213 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$215 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
  wire \$217 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$23 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
  wire \$25 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
  wire \$27 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
  wire \$29 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
  wire \$31 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
  wire \$33 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
  wire \$35 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
  wire \$37 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
  wire \$39 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
  wire \$41 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$43 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
  wire \$45 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$47 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
  wire \$49 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
  wire \$51 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
  wire \$53 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
  wire \$55 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
  wire \$57 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
  wire \$59 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
  wire \$61 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
  wire \$63 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
  wire \$65 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$67 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:110" *)
  wire \$69 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
  wire \$71 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
  wire \$73 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
  wire \$75 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
  wire \$77 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
  wire \$79 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
  wire \$81 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
  wire \$83 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
  wire \$85 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
  wire \$87 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
  wire \$89 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
  wire \$9 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:90" *)
  wire \$91 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
  wire \$93 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
  wire \$95 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
  wire \$97 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:121" *)
  wire \$99 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:13" *)
  input [31:0] Ra;
  (* src = "/tmp/chipcron/all_stages/alu.py:11" *)
  reg [31:0] Ra_unsigned;
  (* src = "/tmp/chipcron/all_stages/alu.py:14" *)
  input [31:0] Rb;
  (* src = "/tmp/chipcron/all_stages/alu.py:24" *)
  output branching;
  reg branching;
  (* src = "/tmp/chipcron/all_stages/alu.py:35" *)
  output csb;
  reg csb;
  (* src = "/tmp/chipcron/all_stages/alu.py:25" *)
  reg [31:0] data_to_mem;
  (* src = "/tmp/chipcron/all_stages/alu.py:23" *)
  input [31:0] immediate;
  (* src = "/tmp/chipcron/all_stages/alu.py:17" *)
  input [2:0] inst_type;
  (* src = "/tmp/chipcron/all_stages/alu.py:19" *)
  input [10:0] inst_type1;
  (* src = "/tmp/chipcron/all_stages/alu.py:27" *)
  reg [10:0] inst_type1_out;
  (* src = "/tmp/chipcron/all_stages/alu.py:20" *)
  input [10:0] inst_type2;
  (* src = "/tmp/chipcron/all_stages/alu.py:28" *)
  reg [10:0] inst_type2_out;
  (* src = "/tmp/chipcron/all_stages/alu.py:21" *)
  input [6:0] inst_type3;
  (* src = "/tmp/chipcron/all_stages/alu.py:29" *)
  reg [6:0] inst_type3_out;
  (* src = "/tmp/chipcron/all_stages/alu.py:26" *)
  reg [2:0] inst_type_out;
  (* src = "/tmp/chipcron/all_stages/alu.py:31" *)
  output jump;
  reg jump;
  (* src = "/tmp/chipcron/all_stages/alu.py:39" *)
  output load_wb;
  reg load_wb;
  (* src = "/tmp/chipcron/all_stages/alu.py:32" *)
  input [7:0] pc;
  (* src = "/tmp/chipcron/all_stages/alu.py:22" *)
  input [4:0] reg_addr_in;
  (* src = "/tmp/chipcron/all_stages/alu.py:30" *)
  output [4:0] reg_addr_out;
  reg [4:0] reg_addr_out;
  (* src = "/tmp/chipcron/all_stages/alu.py:15" *)
  output [31:0] result;
  reg [31:0] result;
  (* src = "/tmp/chipcron/all_stages/alu.py:33" *)
  input [4:0] shamt;
  (* src = "/tmp/chipcron/all_stages/alu.py:34" *)
  reg [4:0] shamt1;
  (* src = "/tmp/chipcron/all_stages/alu.py:36" *)
  output web;
  reg web;
  (* src = "/tmp/chipcron/all_stages/alu.py:40" *)
  output [3:0] wmask;
  reg [3:0] wmask;
  assign \$9  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:115" *) 3'h4;
  assign \$99  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:121" *) 8'he3;
  assign \$101  = $signed(Ra) != (* src = "/tmp/chipcron/all_stages/alu.py:122" *) $signed(Rb);
  assign \$103  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:125" *) 10'h263;
  assign \$105  = $signed(Ra) < (* src = "/tmp/chipcron/all_stages/alu.py:126" *) $signed(Rb);
  assign \$107  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$109  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:72" *) 3'h7;
  assign \$111  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:84" *) 3'h6;
  assign \$113  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:94" *) 3'h5;
  assign \$115  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$117  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:115" *) 3'h4;
  assign \$11  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$119  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$121  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:132" *) 5'h13;
  assign \$123  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:138" *) 9'h113;
  assign \$125  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:147" *) 10'h213;
  assign \$127  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:153" *) 10'h393;
  assign \$129  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:159" *) 10'h293;
  assign \$131  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:166" *) 9'h103;
  assign \$133  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:72" *) 3'h7;
  assign \$135  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:79" *) 10'h333;
  assign \$137  = $signed(Rb) | (* src = "/tmp/chipcron/all_stages/alu.py:80" *) $signed(Ra);
  assign \$13  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:72" *) 3'h7;
  assign \$139  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:81" *) 10'h3b3;
  assign \$141  = $signed(Rb) & (* src = "/tmp/chipcron/all_stages/alu.py:82" *) $signed(Ra);
  assign \$143  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:84" *) 3'h6;
  assign \$145  = inst_type3 == (* src = "/tmp/chipcron/all_stages/alu.py:90" *) 7'h6f;
  assign \$148  = $signed(pc) + (* src = "/tmp/chipcron/all_stages/alu.py:92" *) $signed(8'hfe);
  assign \$147  = + (* src = "/tmp/chipcron/all_stages/alu.py:92" *) $signed(\$148 );
  assign \$151  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:94" *) 3'h5;
  assign \$153  = inst_type3 == (* src = "/tmp/chipcron/all_stages/alu.py:101" *) 6'h37;
  assign \$155  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$157  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:110" *) 9'h123;
  assign \$15  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:84" *) 3'h6;
  assign \$160  = $signed(Ra) + (* src = "/tmp/chipcron/all_stages/alu.py:112" *) $signed(immediate);
  assign \$162  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:115" *) 3'h4;
  assign \$164  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:121" *) 8'he3;
  assign \$166  = $signed(Ra) != (* src = "/tmp/chipcron/all_stages/alu.py:122" *) $signed(Rb);
  assign \$169  = $signed(Ra) + (* src = "/tmp/chipcron/all_stages/alu.py:124" *) $signed(immediate);
  assign \$171  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:125" *) 10'h263;
  assign \$173  = $signed(Ra) < (* src = "/tmp/chipcron/all_stages/alu.py:126" *) $signed(Rb);
  assign \$175  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$177  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:132" *) 5'h13;
  assign \$17  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:94" *) 3'h5;
  assign \$180  = $signed(Ra) + (* src = "/tmp/chipcron/all_stages/alu.py:137" *) $signed(immediate);
  assign \$182  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:138" *) 9'h113;
  assign \$184  = $signed(Ra) < (* src = "/tmp/chipcron/all_stages/alu.py:143" *) $signed(immediate);
  assign \$186  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:147" *) 10'h213;
  assign \$188  = ~ (* src = "/tmp/chipcron/all_stages/alu.py:152" *) $signed(immediate);
  assign \$190  = $signed(Ra) & (* src = "/tmp/chipcron/all_stages/alu.py:152" *) $signed(\$188 );
  assign \$192  = ~ (* src = "/tmp/chipcron/all_stages/alu.py:152" *) $signed(Ra);
  assign \$194  = $signed(\$192 ) & (* src = "/tmp/chipcron/all_stages/alu.py:152" *) $signed(immediate);
  assign \$196  = $signed(\$190 ) | (* src = "/tmp/chipcron/all_stages/alu.py:152" *) $signed(\$194 );
  assign \$198  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:153" *) 10'h393;
  assign \$1  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:72" *) 3'h7;
  assign \$19  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$200  = $signed(Ra) & (* src = "/tmp/chipcron/all_stages/alu.py:158" *) $signed(immediate);
  assign \$202  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:159" *) 10'h293;
  assign \$204  = Ra_unsigned >>> (* src = "/tmp/chipcron/all_stages/alu.py:165" *) shamt;
  assign \$206  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:166" *) 9'h103;
  assign \$209  = $signed(Ra) + (* src = "/tmp/chipcron/all_stages/alu.py:167" *) $signed(immediate);
  assign \$211  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$213  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:110" *) 9'h123;
  assign \$215  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$217  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:159" *) 10'h293;
  assign \$21  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:115" *) 3'h4;
  assign \$23  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$25  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:132" *) 5'h13;
  assign \$27  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:138" *) 9'h113;
  assign \$29  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:147" *) 10'h213;
  assign \$31  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:153" *) 10'h393;
  assign \$33  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:159" *) 10'h293;
  assign \$35  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:166" *) 9'h103;
  assign \$37  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:72" *) 3'h7;
  assign \$3  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:84" *) 3'h6;
  assign \$39  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:84" *) 3'h6;
  assign \$41  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:94" *) 3'h5;
  assign \$43  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$45  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:115" *) 3'h4;
  assign \$47  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$49  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:132" *) 5'h13;
  assign \$51  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:138" *) 9'h113;
  assign \$53  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:147" *) 10'h213;
  assign \$55  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:153" *) 10'h393;
  assign \$57  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:159" *) 10'h293;
  assign \$5  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:94" *) 3'h5;
  assign \$59  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:166" *) 9'h103;
  assign \$61  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:72" *) 3'h7;
  assign \$63  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:84" *) 3'h6;
  assign \$65  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:94" *) 3'h5;
  assign \$67  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$69  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:110" *) 9'h123;
  assign \$71  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:115" *) 3'h4;
  assign \$73  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:129" *) 1'h1;
  assign \$75  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:132" *) 5'h13;
  assign \$77  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:138" *) 9'h113;
  assign \$7  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$79  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:147" *) 10'h213;
  assign \$81  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:153" *) 10'h393;
  assign \$83  = inst_type1 == (* src = "/tmp/chipcron/all_stages/alu.py:159" *) 10'h293;
  assign \$85  = inst_type2 == (* src = "/tmp/chipcron/all_stages/alu.py:166" *) 9'h103;
  assign \$87  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:72" *) 3'h7;
  assign \$89  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:84" *) 3'h6;
  assign \$91  = inst_type3 == (* src = "/tmp/chipcron/all_stages/alu.py:90" *) 7'h6f;
  assign \$93  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:94" *) 3'h5;
  assign \$95  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:104" *) 2'h3;
  assign \$97  = inst_type == (* src = "/tmp/chipcron/all_stages/alu.py:115" *) 3'h4;
  always @* begin
    inst_type_out = 3'h0;
    inst_type_out = inst_type;
  end
  always @* begin
    inst_type1_out = 11'h000;
    inst_type1_out = inst_type1;
  end
  always @* begin
    branching = 1'h0;
    (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
    casez (\$87 )
      /* src = "/tmp/chipcron/all_stages/alu.py:72" */
      1'h1:
          branching = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
    casez (\$89 )
      /* src = "/tmp/chipcron/all_stages/alu.py:84" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/alu.py:90" *)
          casez (\$91 )
            /* src = "/tmp/chipcron/all_stages/alu.py:90" */
            1'h1:
                branching = 1'h1;
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
    casez (\$93 )
      /* src = "/tmp/chipcron/all_stages/alu.py:94" */
      1'h1:
          branching = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$95 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          branching = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
    casez (\$97 )
      /* src = "/tmp/chipcron/all_stages/alu.py:115" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:121" *)
          casez (\$99 )
            /* src = "/tmp/chipcron/all_stages/alu.py:121" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/alu.py:122" *)
                casez (\$101 )
                  /* src = "/tmp/chipcron/all_stages/alu.py:122" */
                  1'h1:
                      branching = 1'h1;
                endcase
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:125" *)
          casez (\$103 )
            /* src = "/tmp/chipcron/all_stages/alu.py:125" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/alu.py:126" *)
                casez (\$105 )
                  /* src = "/tmp/chipcron/all_stages/alu.py:126" */
                  1'h1:
                      branching = 1'h1;
                endcase
          endcase
        end
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$107 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
          branching = 1'h0;
    endcase
  end
  always @* begin
    jump = 1'h0;
    (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
    casez (\$109 )
      /* src = "/tmp/chipcron/all_stages/alu.py:72" */
      1'h1:
          jump = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
    casez (\$111 )
      /* src = "/tmp/chipcron/all_stages/alu.py:84" */
      1'h1:
          jump = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
    casez (\$113 )
      /* src = "/tmp/chipcron/all_stages/alu.py:94" */
      1'h1:
          jump = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$115 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          jump = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
    casez (\$117 )
      /* src = "/tmp/chipcron/all_stages/alu.py:115" */
      1'h1:
          jump = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$119 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
          casez (\$121 )
            /* src = "/tmp/chipcron/all_stages/alu.py:132" */
            1'h1:
                jump = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
          casez (\$123 )
            /* src = "/tmp/chipcron/all_stages/alu.py:138" */
            1'h1:
                jump = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
          casez (\$125 )
            /* src = "/tmp/chipcron/all_stages/alu.py:147" */
            1'h1:
                jump = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
          casez (\$127 )
            /* src = "/tmp/chipcron/all_stages/alu.py:153" */
            1'h1:
                jump = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
          casez (\$129 )
            /* src = "/tmp/chipcron/all_stages/alu.py:159" */
            1'h1:
                jump = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
          casez (\$131 )
            /* src = "/tmp/chipcron/all_stages/alu.py:166" */
            1'h1:
                jump = 1'h0;
          endcase
        end
    endcase
  end
  always @* begin
    result = 32'd0;
    (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
    casez (\$133 )
      /* src = "/tmp/chipcron/all_stages/alu.py:72" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:79" *)
          casez (\$135 )
            /* src = "/tmp/chipcron/all_stages/alu.py:79" */
            1'h1:
                result = \$137 ;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:81" *)
          casez (\$139 )
            /* src = "/tmp/chipcron/all_stages/alu.py:81" */
            1'h1:
                result = \$141 ;
          endcase
        end
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
    casez (\$143 )
      /* src = "/tmp/chipcron/all_stages/alu.py:84" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/alu.py:90" *)
          casez (\$145 )
            /* src = "/tmp/chipcron/all_stages/alu.py:90" */
            1'h1:
                result = \$147 ;
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
    casez (\$151 )
      /* src = "/tmp/chipcron/all_stages/alu.py:94" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/alu.py:101" *)
          casez (\$153 )
            /* src = "/tmp/chipcron/all_stages/alu.py:101" */
            1'h1:
                result = immediate;
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$155 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/alu.py:110" *)
          casez (\$157 )
            /* src = "/tmp/chipcron/all_stages/alu.py:110" */
            1'h1:
                result = \$159 [31:0];
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
    casez (\$162 )
      /* src = "/tmp/chipcron/all_stages/alu.py:115" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:121" *)
          casez (\$164 )
            /* src = "/tmp/chipcron/all_stages/alu.py:121" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/alu.py:122" *)
                casez (\$166 )
                  /* src = "/tmp/chipcron/all_stages/alu.py:122" */
                  1'h1:
                      result = \$168 [31:0];
                endcase
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:125" *)
          casez (\$171 )
            /* src = "/tmp/chipcron/all_stages/alu.py:125" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/alu.py:126" *)
                casez (\$173 )
                  /* src = "/tmp/chipcron/all_stages/alu.py:126" */
                  1'h1:
                      result = immediate;
                endcase
          endcase
        end
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$175 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
          casez (\$177 )
            /* src = "/tmp/chipcron/all_stages/alu.py:132" */
            1'h1:
                result = \$179 [31:0];
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
          casez (\$182 )
            /* src = "/tmp/chipcron/all_stages/alu.py:138" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/alu.py:143" *)
                casez (\$184 )
                  /* src = "/tmp/chipcron/all_stages/alu.py:143" */
                  1'h1:
                      result = 32'd1;
                  /* src = "/tmp/chipcron/all_stages/alu.py:145" */
                  default:
                      result = 32'd0;
                endcase
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
          casez (\$186 )
            /* src = "/tmp/chipcron/all_stages/alu.py:147" */
            1'h1:
                result = \$196 ;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
          casez (\$198 )
            /* src = "/tmp/chipcron/all_stages/alu.py:153" */
            1'h1:
                result = \$200 ;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
          casez (\$202 )
            /* src = "/tmp/chipcron/all_stages/alu.py:159" */
            1'h1:
                result = \$204 ;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
          casez (\$206 )
            /* src = "/tmp/chipcron/all_stages/alu.py:166" */
            1'h1:
                result = \$208 [31:0];
          endcase
        end
    endcase
  end
  always @* begin
    data_to_mem = 32'd0;
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$211 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/alu.py:110" *)
          casez (\$213 )
            /* src = "/tmp/chipcron/all_stages/alu.py:110" */
            1'h1:
                data_to_mem = Rb;
          endcase
    endcase
  end
  always @* begin
    Ra_unsigned = 32'd0;
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$215 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
          casez (\$217 )
            /* src = "/tmp/chipcron/all_stages/alu.py:159" */
            1'h1:
                Ra_unsigned = Ra;
          endcase
    endcase
  end
  always @* begin
    inst_type2_out = 11'h000;
    inst_type2_out = inst_type2;
  end
  always @* begin
    inst_type3_out = 7'h00;
    inst_type3_out = inst_type3;
  end
  always @* begin
    reg_addr_out = 5'h00;
    reg_addr_out = reg_addr_in;
  end
  always @* begin
    shamt1 = 5'h00;
    shamt1 = Rb[4:0];
  end
  always @* begin
    load_wb = 1'h0;
    (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
    casez (\$1 )
      /* src = "/tmp/chipcron/all_stages/alu.py:72" */
      1'h1:
          load_wb = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
    casez (\$3 )
      /* src = "/tmp/chipcron/all_stages/alu.py:84" */
      1'h1:
          load_wb = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
    casez (\$5 )
      /* src = "/tmp/chipcron/all_stages/alu.py:94" */
      1'h1:
          load_wb = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$7 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          load_wb = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
    casez (\$9 )
      /* src = "/tmp/chipcron/all_stages/alu.py:115" */
      1'h1:
          load_wb = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$11 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
          load_wb = 1'h1;
    endcase
  end
  always @* begin
    csb = 1'h0;
    (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
    casez (\$13 )
      /* src = "/tmp/chipcron/all_stages/alu.py:72" */
      1'h1:
          csb = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
    casez (\$15 )
      /* src = "/tmp/chipcron/all_stages/alu.py:84" */
      1'h1:
          csb = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
    casez (\$17 )
      /* src = "/tmp/chipcron/all_stages/alu.py:94" */
      1'h1:
          csb = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$19 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          csb = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
    casez (\$21 )
      /* src = "/tmp/chipcron/all_stages/alu.py:115" */
      1'h1:
          csb = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$23 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
          casez (\$25 )
            /* src = "/tmp/chipcron/all_stages/alu.py:132" */
            1'h1:
                csb = 1'h1;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
          casez (\$27 )
            /* src = "/tmp/chipcron/all_stages/alu.py:138" */
            1'h1:
                csb = 1'h1;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
          casez (\$29 )
            /* src = "/tmp/chipcron/all_stages/alu.py:147" */
            1'h1:
                csb = 1'h1;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
          casez (\$31 )
            /* src = "/tmp/chipcron/all_stages/alu.py:153" */
            1'h1:
                csb = 1'h1;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
          casez (\$33 )
            /* src = "/tmp/chipcron/all_stages/alu.py:159" */
            1'h1:
                csb = 1'h1;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
          casez (\$35 )
            /* src = "/tmp/chipcron/all_stages/alu.py:166" */
            1'h1:
                csb = 1'h0;
          endcase
        end
    endcase
  end
  always @* begin
    web = 1'h0;
    (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
    casez (\$37 )
      /* src = "/tmp/chipcron/all_stages/alu.py:72" */
      1'h1:
          web = 1'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
    casez (\$39 )
      /* src = "/tmp/chipcron/all_stages/alu.py:84" */
      1'h1:
          web = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
    casez (\$41 )
      /* src = "/tmp/chipcron/all_stages/alu.py:94" */
      1'h1:
          web = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$43 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          web = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
    casez (\$45 )
      /* src = "/tmp/chipcron/all_stages/alu.py:115" */
      1'h1:
          web = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$47 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
          casez (\$49 )
            /* src = "/tmp/chipcron/all_stages/alu.py:132" */
            1'h1:
                web = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
          casez (\$51 )
            /* src = "/tmp/chipcron/all_stages/alu.py:138" */
            1'h1:
                web = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
          casez (\$53 )
            /* src = "/tmp/chipcron/all_stages/alu.py:147" */
            1'h1:
                web = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
          casez (\$55 )
            /* src = "/tmp/chipcron/all_stages/alu.py:153" */
            1'h1:
                web = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
          casez (\$57 )
            /* src = "/tmp/chipcron/all_stages/alu.py:159" */
            1'h1:
                web = 1'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
          casez (\$59 )
            /* src = "/tmp/chipcron/all_stages/alu.py:166" */
            1'h1:
                web = 1'h1;
          endcase
        end
    endcase
  end
  always @* begin
    wmask = 4'h0;
    (* src = "/tmp/chipcron/all_stages/alu.py:72" *)
    casez (\$61 )
      /* src = "/tmp/chipcron/all_stages/alu.py:72" */
      1'h1:
          wmask = 4'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:84" *)
    casez (\$63 )
      /* src = "/tmp/chipcron/all_stages/alu.py:84" */
      1'h1:
          wmask = 4'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:94" *)
    casez (\$65 )
      /* src = "/tmp/chipcron/all_stages/alu.py:94" */
      1'h1:
          wmask = 4'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:104" *)
    casez (\$67 )
      /* src = "/tmp/chipcron/all_stages/alu.py:104" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/alu.py:110" *)
          casez (\$69 )
            /* src = "/tmp/chipcron/all_stages/alu.py:110" */
            1'h1:
                wmask = 4'hf;
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:115" *)
    casez (\$71 )
      /* src = "/tmp/chipcron/all_stages/alu.py:115" */
      1'h1:
          wmask = 4'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/alu.py:129" *)
    casez (\$73 )
      /* src = "/tmp/chipcron/all_stages/alu.py:129" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/alu.py:132" *)
          casez (\$75 )
            /* src = "/tmp/chipcron/all_stages/alu.py:132" */
            1'h1:
                wmask = 4'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:138" *)
          casez (\$77 )
            /* src = "/tmp/chipcron/all_stages/alu.py:138" */
            1'h1:
                wmask = 4'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:147" *)
          casez (\$79 )
            /* src = "/tmp/chipcron/all_stages/alu.py:147" */
            1'h1:
                wmask = 4'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:153" *)
          casez (\$81 )
            /* src = "/tmp/chipcron/all_stages/alu.py:153" */
            1'h1:
                wmask = 4'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:159" *)
          casez (\$83 )
            /* src = "/tmp/chipcron/all_stages/alu.py:159" */
            1'h1:
                wmask = 4'h0;
          endcase
          (* src = "/tmp/chipcron/all_stages/alu.py:166" *)
          casez (\$85 )
            /* src = "/tmp/chipcron/all_stages/alu.py:166" */
            1'h1:
                wmask = 4'hf;
          endcase
        end
    endcase
  end
  assign \$159  = \$160 ;
  assign \$168  = \$169 ;
  assign \$179  = \$180 ;
  assign \$208  = \$209 ;
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.ID" *)
module ID(s1, s2, s1_data_in, s2_data_in, des, s1data_out, s2data_out, signextended_immediate, instruction_type, it0, it1, it2, it3, ifload, shamt, instruction);
  (* src = "/tmp/chipcron/all_stages/id.py:54" *)
  wire [10:0] \$1 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$101 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$103 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$105 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$107 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$109 ;
  (* src = "/tmp/chipcron/all_stages/id.py:65" *)
  wire \$11 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$111 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$113 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$115 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$117 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$119 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$121 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$123 ;
  (* src = "/tmp/chipcron/all_stages/id.py:65" *)
  wire \$125 ;
  (* src = "/tmp/chipcron/all_stages/id.py:65" *)
  wire \$127 ;
  (* src = "/tmp/chipcron/all_stages/id.py:69" *)
  wire \$129 ;
  (* src = "/tmp/chipcron/all_stages/id.py:65" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$131 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$133 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$135 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$137 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$139 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$141 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$143 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$145 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$147 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$149 ;
  (* src = "/tmp/chipcron/all_stages/id.py:69" *)
  wire \$15 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$151 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$153 ;
  (* src = "/tmp/chipcron/all_stages/id.py:65" *)
  wire \$155 ;
  (* src = "/tmp/chipcron/all_stages/id.py:65" *)
  wire \$157 ;
  (* src = "/tmp/chipcron/all_stages/id.py:67" *)
  wire [34:0] \$159 ;
  (* src = "/tmp/chipcron/all_stages/id.py:67" *)
  wire [34:0] \$160 ;
  (* src = "/tmp/chipcron/all_stages/id.py:69" *)
  wire \$162 ;
  (* src = "/tmp/chipcron/all_stages/id.py:72" *)
  wire [31:0] \$164 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$166 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$168 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$17 ;
  (* src = "/tmp/chipcron/all_stages/id.py:78" *)
  wire \$170 ;
  (* src = "/tmp/chipcron/all_stages/id.py:79" *)
  wire [31:0] \$172 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$174 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$176 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$178 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$180 ;
  (* src = "/tmp/chipcron/all_stages/id.py:84" *)
  wire \$182 ;
  (* src = "/tmp/chipcron/all_stages/id.py:85" *)
  wire [31:0] \$184 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$186 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$188 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$19 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$190 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$192 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$194 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$196 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$198 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$200 ;
  (* src = "/tmp/chipcron/all_stages/id.py:95" *)
  wire \$202 ;
  (* src = "/tmp/chipcron/all_stages/id.py:96" *)
  wire [31:0] \$204 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$206 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$208 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$21 ;
  (* src = "/tmp/chipcron/all_stages/id.py:104" *)
  wire \$210 ;
  (* src = "/tmp/chipcron/all_stages/id.py:105" *)
  wire [31:0] \$212 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$214 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$216 ;
  (* src = "/tmp/chipcron/all_stages/id.py:112" *)
  wire \$218 ;
  (* src = "/tmp/chipcron/all_stages/id.py:113" *)
  wire [31:0] \$220 ;
  (* src = "/tmp/chipcron/all_stages/id.py:114" *)
  wire \$222 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$224 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$226 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$228 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$23 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$230 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$232 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$234 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$236 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$238 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$240 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$242 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$244 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$246 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$25 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$27 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$29 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$31 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$33 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$35 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$37 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$39 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$41 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$43 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$45 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$47 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$49 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$51 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$53 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$55 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$57 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$59 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$61 ;
  (* src = "/tmp/chipcron/all_stages/id.py:73" *)
  wire \$63 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$65 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$67 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$69 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/all_stages/id.py:82" *)
  wire \$71 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$73 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$75 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$77 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$79 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$81 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$83 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$85 ;
  (* src = "/tmp/chipcron/all_stages/id.py:90" *)
  wire \$87 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$89 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$9 ;
  (* src = "/tmp/chipcron/all_stages/id.py:99" *)
  wire \$91 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$93 ;
  (* src = "/tmp/chipcron/all_stages/id.py:108" *)
  wire \$95 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$97 ;
  (* src = "/tmp/chipcron/all_stages/id.py:60" *)
  wire \$99 ;
  (* src = "/tmp/chipcron/all_stages/id.py:17" *)
  output [4:0] des;
  reg [4:0] des;
  (* src = "/tmp/chipcron/all_stages/id.py:28" *)
  output ifload;
  reg ifload;
  (* src = "/tmp/chipcron/all_stages/id.py:11" *)
  input [31:0] instruction;
  (* src = "/tmp/chipcron/all_stages/id.py:23" *)
  output [2:0] instruction_type;
  reg [2:0] instruction_type;
  (* src = "/tmp/chipcron/all_stages/id.py:24" *)
  output [16:0] it0;
  reg [16:0] it0;
  (* src = "/tmp/chipcron/all_stages/id.py:25" *)
  output [10:0] it1;
  reg [10:0] it1;
  (* src = "/tmp/chipcron/all_stages/id.py:26" *)
  output [10:0] it2;
  reg [10:0] it2;
  (* src = "/tmp/chipcron/all_stages/id.py:27" *)
  output [6:0] it3;
  reg [6:0] it3;
  (* src = "/tmp/chipcron/all_stages/id.py:18" *)
  output [4:0] s1;
  reg [4:0] s1;
  (* src = "/tmp/chipcron/all_stages/id.py:12" *)
  input [31:0] s1_data_in;
  (* src = "/tmp/chipcron/all_stages/id.py:20" *)
  output [31:0] s1data_out;
  reg [31:0] s1data_out;
  (* src = "/tmp/chipcron/all_stages/id.py:19" *)
  output [4:0] s2;
  reg [4:0] s2;
  (* src = "/tmp/chipcron/all_stages/id.py:13" *)
  input [31:0] s2_data_in;
  (* src = "/tmp/chipcron/all_stages/id.py:21" *)
  output [31:0] s2data_out;
  reg [31:0] s2data_out;
  (* src = "/tmp/chipcron/all_stages/id.py:29" *)
  output [4:0] shamt;
  reg [4:0] shamt;
  (* src = "/tmp/chipcron/all_stages/id.py:22" *)
  output [31:0] signextended_immediate;
  reg [31:0] signextended_immediate;
  assign \$9  = \$5  | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$7 ;
  assign \$99  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$97 ;
  assign \$101  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h3b3;
  assign \$103  = \$99  | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$101 ;
  assign \$105  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:73" *) 9'h123;
  assign \$107  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:73" *) \$105 ;
  assign \$109  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 8'he3;
  assign \$111  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$109 ;
  assign \$113  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 10'h263;
  assign \$115  = \$111  | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$113 ;
  assign \$117  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h333;
  assign \$11  = it3 == (* src = "/tmp/chipcron/all_stages/id.py:65" *) 6'h37;
  assign \$119  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$117 ;
  assign \$121  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h3b3;
  assign \$123  = \$119  | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$121 ;
  assign \$125  = it3 == (* src = "/tmp/chipcron/all_stages/id.py:65" *) 6'h37;
  assign \$127  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:65" *) \$125 ;
  assign \$129  = it3 == (* src = "/tmp/chipcron/all_stages/id.py:69" *) 7'h6f;
  assign \$131  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 5'h13;
  assign \$133  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$131 ;
  assign \$135  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 9'h113;
  assign \$137  = \$133  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$135 ;
  assign \$13  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:65" *) \$11 ;
  assign \$139  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h213;
  assign \$141  = \$137  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$139 ;
  assign \$143  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h393;
  assign \$145  = \$141  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$143 ;
  assign \$147  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:99" *) 10'h293;
  assign \$149  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:99" *) \$147 ;
  assign \$151  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:108" *) 9'h103;
  assign \$153  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:108" *) \$151 ;
  assign \$155  = it3 == (* src = "/tmp/chipcron/all_stages/id.py:65" *) 6'h37;
  assign \$157  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:65" *) \$155 ;
  assign \$15  = it3 == (* src = "/tmp/chipcron/all_stages/id.py:69" *) 7'h6f;
  assign \$160  = instruction[31:12] <<< (* src = "/tmp/chipcron/all_stages/id.py:67" *) 4'hc;
  assign \$162  = it3 == (* src = "/tmp/chipcron/all_stages/id.py:69" *) 7'h6f;
  assign \$164  = + (* src = "/tmp/chipcron/all_stages/id.py:72" *) { 1'h0, instruction[31], instruction[19:12], instruction[20], instruction[30:21], 1'h0 };
  assign \$166  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:73" *) 9'h123;
  assign \$168  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:73" *) \$166 ;
  assign \$170  = instruction[31] == (* src = "/tmp/chipcron/all_stages/id.py:78" *) 1'h0;
  assign \$172  = + (* src = "/tmp/chipcron/all_stages/id.py:79" *) { 1'h0, instruction[31:25], instruction[11:7] };
  assign \$174  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 8'he3;
  assign \$176  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$174 ;
  assign \$178  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 10'h263;
  assign \$17  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:73" *) 9'h123;
  assign \$180  = \$176  | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$178 ;
  assign \$182  = instruction[31] == (* src = "/tmp/chipcron/all_stages/id.py:84" *) 1'h0;
  assign \$184  = + (* src = "/tmp/chipcron/all_stages/id.py:85" *) { 2'h0, instruction[31], instruction[7], instruction[30:25], instruction[11:8], 1'h0 };
  assign \$186  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 5'h13;
  assign \$188  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$186 ;
  assign \$190  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 9'h113;
  assign \$192  = \$188  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$190 ;
  assign \$194  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h213;
  assign \$196  = \$192  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$194 ;
  assign \$198  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h393;
  assign \$1  = + (* src = "/tmp/chipcron/all_stages/id.py:54" *) { instruction[14:12], instruction[6:0] };
  assign \$19  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:73" *) \$17 ;
  assign \$200  = \$196  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$198 ;
  assign \$202  = instruction[31] == (* src = "/tmp/chipcron/all_stages/id.py:95" *) 1'h0;
  assign \$204  = + (* src = "/tmp/chipcron/all_stages/id.py:96" *) { 1'h0, instruction[31:20] };
  assign \$206  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:99" *) 10'h293;
  assign \$208  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:99" *) \$206 ;
  assign \$210  = instruction[31] == (* src = "/tmp/chipcron/all_stages/id.py:104" *) 1'h0;
  assign \$212  = + (* src = "/tmp/chipcron/all_stages/id.py:105" *) { 1'h0, instruction[31:20] };
  assign \$214  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:108" *) 9'h103;
  assign \$216  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:108" *) \$214 ;
  assign \$218  = instruction[31] == (* src = "/tmp/chipcron/all_stages/id.py:112" *) 1'h0;
  assign \$21  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 8'he3;
  assign \$220  = + (* src = "/tmp/chipcron/all_stages/id.py:113" *) { 1'h0, instruction[31:20] };
  assign \$222  = instruction[31] == (* src = "/tmp/chipcron/all_stages/id.py:114" *) 1'h1;
  assign \$224  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 5'h13;
  assign \$226  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$224 ;
  assign \$228  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 9'h113;
  assign \$230  = \$226  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$228 ;
  assign \$232  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h213;
  assign \$234  = \$230  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$232 ;
  assign \$236  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h393;
  assign \$238  = \$234  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$236 ;
  assign \$23  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$21 ;
  assign \$240  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:99" *) 10'h293;
  assign \$242  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:99" *) \$240 ;
  assign \$244  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:108" *) 9'h103;
  assign \$246  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:108" *) \$244 ;
  assign \$25  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 10'h263;
  assign \$27  = \$23  | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$25 ;
  assign \$29  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 5'h13;
  assign \$31  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$29 ;
  assign \$33  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 9'h113;
  assign \$35  = \$31  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$33 ;
  assign \$37  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h213;
  assign \$3  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h333;
  assign \$39  = \$35  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$37 ;
  assign \$41  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h393;
  assign \$43  = \$39  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$41 ;
  assign \$45  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:99" *) 10'h293;
  assign \$47  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:99" *) \$45 ;
  assign \$49  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:108" *) 9'h103;
  assign \$51  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:108" *) \$49 ;
  assign \$53  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h333;
  assign \$55  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$53 ;
  assign \$57  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h3b3;
  assign \$5  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$3 ;
  assign \$59  = \$55  | (* src = "/tmp/chipcron/all_stages/id.py:60" *) \$57 ;
  assign \$61  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:73" *) 9'h123;
  assign \$63  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:73" *) \$61 ;
  assign \$65  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 8'he3;
  assign \$67  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$65 ;
  assign \$69  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:82" *) 10'h263;
  assign \$71  = \$67  | (* src = "/tmp/chipcron/all_stages/id.py:82" *) \$69 ;
  assign \$73  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 5'h13;
  assign \$75  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$73 ;
  assign \$77  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 9'h113;
  assign \$7  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h3b3;
  assign \$79  = \$75  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$77 ;
  assign \$81  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h213;
  assign \$83  = \$79  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$81 ;
  assign \$85  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:90" *) 10'h393;
  assign \$87  = \$83  | (* src = "/tmp/chipcron/all_stages/id.py:90" *) \$85 ;
  assign \$89  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:99" *) 10'h293;
  assign \$91  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:99" *) \$89 ;
  assign \$93  = it2 == (* src = "/tmp/chipcron/all_stages/id.py:108" *) 9'h103;
  assign \$95  = 1'h0 | (* src = "/tmp/chipcron/all_stages/id.py:108" *) \$93 ;
  assign \$97  = it1 == (* src = "/tmp/chipcron/all_stages/id.py:60" *) 10'h333;
  always @* begin
    it3 = 7'h00;
    it3 = instruction[6:0];
  end
  always @* begin
    it2 = 11'h000;
    it2 = \$1 ;
  end
  always @* begin
    signextended_immediate = 32'd0;
    (* src = "/tmp/chipcron/all_stages/id.py:65" *)
    casez (\$157 )
      /* src = "/tmp/chipcron/all_stages/id.py:65" */
      1'h1:
          signextended_immediate = \$159 [31:0];
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:69" *)
    casez (\$162 )
      /* src = "/tmp/chipcron/all_stages/id.py:69" */
      1'h1:
          signextended_immediate = \$164 ;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:73" *)
    casez (\$168 )
      /* src = "/tmp/chipcron/all_stages/id.py:73" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/id.py:78" *)
          casez (\$170 )
            /* src = "/tmp/chipcron/all_stages/id.py:78" */
            1'h1:
                signextended_immediate = \$172 ;
            /* src = "/tmp/chipcron/all_stages/id.py:80" */
            default:
                signextended_immediate = { 20'hfffff, instruction[31:25], instruction[11:7] };
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:82" *)
    casez (\$180 )
      /* src = "/tmp/chipcron/all_stages/id.py:82" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/id.py:84" *)
          casez (\$182 )
            /* src = "/tmp/chipcron/all_stages/id.py:84" */
            1'h1:
                signextended_immediate = \$184 ;
            /* src = "/tmp/chipcron/all_stages/id.py:86" */
            default:
                signextended_immediate = { 19'h7ffff, instruction[31], instruction[7], instruction[30:25], instruction[11:8], 1'h0 };
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:90" *)
    casez (\$200 )
      /* src = "/tmp/chipcron/all_stages/id.py:90" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/id.py:95" *)
          casez (\$202 )
            /* src = "/tmp/chipcron/all_stages/id.py:95" */
            1'h1:
                signextended_immediate = \$204 ;
            /* src = "/tmp/chipcron/all_stages/id.py:97" */
            default:
                signextended_immediate = { 20'hfffff, instruction[31:20] };
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:99" *)
    casez (\$208 )
      /* src = "/tmp/chipcron/all_stages/id.py:99" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/id.py:104" *)
          casez (\$210 )
            /* src = "/tmp/chipcron/all_stages/id.py:104" */
            1'h1:
                signextended_immediate = \$212 ;
            /* src = "/tmp/chipcron/all_stages/id.py:106" */
            default:
                signextended_immediate = { 20'hfffff, instruction[31:20] };
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:108" *)
    casez (\$216 )
      /* src = "/tmp/chipcron/all_stages/id.py:108" */
      1'h1:
        begin
          (* src = "/tmp/chipcron/all_stages/id.py:112" *)
          casez (\$218 )
            /* src = "/tmp/chipcron/all_stages/id.py:112" */
            1'h1:
                signextended_immediate = \$220 ;
          endcase
          (* src = "/tmp/chipcron/all_stages/id.py:114" *)
          casez (\$222 )
            /* src = "/tmp/chipcron/all_stages/id.py:114" */
            1'h1:
                signextended_immediate = { 20'hfffff, instruction[31:20] };
          endcase
        end
    endcase
  end
  always @* begin
    shamt = 5'h00;
    (* src = "/tmp/chipcron/all_stages/id.py:90" *)
    casez (\$238 )
      /* src = "/tmp/chipcron/all_stages/id.py:90" */
      1'h1:
          shamt = instruction[24:20];
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:99" *)
    casez (\$242 )
      /* src = "/tmp/chipcron/all_stages/id.py:99" */
      1'h1:
          shamt = instruction[24:20];
    endcase
  end
  always @* begin
    ifload = 1'h0;
    (* src = "/tmp/chipcron/all_stages/id.py:108" *)
    casez (\$246 )
      /* src = "/tmp/chipcron/all_stages/id.py:108" */
      1'h1:
          ifload = 1'h1;
    endcase
  end
  always @* begin
    it1 = 11'h000;
    it1 = { instruction[30], instruction[14:12], instruction[6:0] };
  end
  always @* begin
    it0 = 17'h00000;
    it0 = { instruction[31:25], instruction[14:12], instruction[6:0] };
  end
  always @* begin
    s1 = 5'h00;
    s1 = instruction[19:15];
  end
  always @* begin
    s2 = 5'h00;
    s2 = instruction[24:20];
  end
  always @* begin
    instruction_type = 3'h0;
    (* src = "/tmp/chipcron/all_stages/id.py:60" *)
    casez (\$9 )
      /* src = "/tmp/chipcron/all_stages/id.py:60" */
      1'h1:
          instruction_type = 3'h7;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:65" *)
    casez (\$13 )
      /* src = "/tmp/chipcron/all_stages/id.py:65" */
      1'h1:
          instruction_type = 3'h5;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:69" *)
    casez (\$15 )
      /* src = "/tmp/chipcron/all_stages/id.py:69" */
      1'h1:
          instruction_type = 3'h6;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:73" *)
    casez (\$19 )
      /* src = "/tmp/chipcron/all_stages/id.py:73" */
      1'h1:
          instruction_type = 3'h3;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:82" *)
    casez (\$27 )
      /* src = "/tmp/chipcron/all_stages/id.py:82" */
      1'h1:
          instruction_type = 3'h4;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:90" *)
    casez (\$43 )
      /* src = "/tmp/chipcron/all_stages/id.py:90" */
      1'h1:
          instruction_type = 3'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:99" *)
    casez (\$47 )
      /* src = "/tmp/chipcron/all_stages/id.py:99" */
      1'h1:
          instruction_type = 3'h1;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:108" *)
    casez (\$51 )
      /* src = "/tmp/chipcron/all_stages/id.py:108" */
      1'h1:
          instruction_type = 3'h1;
    endcase
  end
  always @* begin
    s1data_out = 32'd0;
    (* src = "/tmp/chipcron/all_stages/id.py:60" *)
    casez (\$59 )
      /* src = "/tmp/chipcron/all_stages/id.py:60" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:73" *)
    casez (\$63 )
      /* src = "/tmp/chipcron/all_stages/id.py:73" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:82" *)
    casez (\$71 )
      /* src = "/tmp/chipcron/all_stages/id.py:82" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:90" *)
    casez (\$87 )
      /* src = "/tmp/chipcron/all_stages/id.py:90" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:99" *)
    casez (\$91 )
      /* src = "/tmp/chipcron/all_stages/id.py:99" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:108" *)
    casez (\$95 )
      /* src = "/tmp/chipcron/all_stages/id.py:108" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
  end
  always @* begin
    s2data_out = 32'd0;
    (* src = "/tmp/chipcron/all_stages/id.py:60" *)
    casez (\$103 )
      /* src = "/tmp/chipcron/all_stages/id.py:60" */
      1'h1:
          s2data_out = s2_data_in;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:73" *)
    casez (\$107 )
      /* src = "/tmp/chipcron/all_stages/id.py:73" */
      1'h1:
          s2data_out = s2_data_in;
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:82" *)
    casez (\$115 )
      /* src = "/tmp/chipcron/all_stages/id.py:82" */
      1'h1:
          s2data_out = s2_data_in;
    endcase
  end
  always @* begin
    des = 5'h00;
    (* src = "/tmp/chipcron/all_stages/id.py:60" *)
    casez (\$123 )
      /* src = "/tmp/chipcron/all_stages/id.py:60" */
      1'h1:
          des = instruction[11:7];
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:65" *)
    casez (\$127 )
      /* src = "/tmp/chipcron/all_stages/id.py:65" */
      1'h1:
          des = instruction[11:7];
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:69" *)
    casez (\$129 )
      /* src = "/tmp/chipcron/all_stages/id.py:69" */
      1'h1:
          des = instruction[11:7];
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:90" *)
    casez (\$145 )
      /* src = "/tmp/chipcron/all_stages/id.py:90" */
      1'h1:
          des = instruction[11:7];
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:99" *)
    casez (\$149 )
      /* src = "/tmp/chipcron/all_stages/id.py:99" */
      1'h1:
          des = instruction[11:7];
    endcase
    (* src = "/tmp/chipcron/all_stages/id.py:108" *)
    casez (\$153 )
      /* src = "/tmp/chipcron/all_stages/id.py:108" */
      1'h1:
          des = instruction[11:7];
    endcase
  end
  assign \$159  = \$160 ;
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.IF_ID_pipeline" *)
module IF_ID_pipeline(jump, stall, IF2_out, inst_out, rst, clk, branch);
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" *)
  wire \$1 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:67" *)
  wire \$11 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:71" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:75" *)
  wire \$15 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:79" *)
  wire \$17 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" *)
  wire \$19 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:51" *)
  wire \$21 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:55" *)
  wire \$23 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:59" *)
  wire \$25 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:63" *)
  wire \$27 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:67" *)
  wire \$29 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:51" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:71" *)
  wire \$31 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:75" *)
  wire \$33 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:79" *)
  wire \$35 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:55" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:59" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:63" *)
  wire \$9 ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:15" *)
  input [31:0] IF2_out;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:21" *)
  input branch;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:26" *)
  reg branch_next = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:26" *)
  reg \branch_next$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:28" *)
  reg branch_next2 = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:28" *)
  reg \branch_next2$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:30" *)
  reg branch_next3 = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:30" *)
  reg \branch_next3$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:16" *)
  reg [31:0] buffer = 32'd0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:16" *)
  reg [31:0] \buffer$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:13" *)
  reg [31:0] inst_in;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:18" *)
  output [31:0] inst_out;
  reg [31:0] inst_out;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:14" *)
  reg [31:0] inst_prev = 32'd0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:14" *)
  reg [31:0] \inst_prev$next ;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:22" *)
  input jump;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:27" *)
  reg jump_next = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:27" *)
  reg \jump_next$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:29" *)
  reg jump_next2 = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:29" *)
  reg \jump_next2$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:31" *)
  reg jump_next3 = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:31" *)
  reg \jump_next3$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:20" *)
  input stall;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:23" *)
  reg stall_next = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:23" *)
  reg \stall_next$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:24" *)
  reg stall_next2 = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:24" *)
  reg \stall_next2$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:25" *)
  reg stall_next3 = 1'h0;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:25" *)
  reg \stall_next3$next ;
  assign \$9  = branch_next2 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:63" *) 1'h1;
  assign \$11  = jump_next2 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:67" *) 1'h1;
  assign \$13  = stall_next3 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:71" *) 1'h1;
  assign \$15  = branch_next3 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:75" *) 1'h1;
  assign \$17  = jump_next3 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:79" *) 1'h1;
  assign \$1  = stall_next == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" *) 1'h1;
  assign \$19  = stall_next == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" *) 1'h1;
  assign \$21  = branch_next == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:51" *) 1'h1;
  assign \$23  = jump_next == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:55" *) 1'h1;
  assign \$25  = stall_next2 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:59" *) 1'h1;
  assign \$27  = branch_next2 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:63" *) 1'h1;
  assign \$29  = jump_next2 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:67" *) 1'h1;
  assign \$31  = stall_next3 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:71" *) 1'h1;
  assign \$33  = branch_next3 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:75" *) 1'h1;
  assign \$35  = jump_next3 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:79" *) 1'h1;
  assign \$3  = branch_next == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:51" *) 1'h1;
  assign \$5  = jump_next == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:55" *) 1'h1;
  assign \$7  = stall_next2 == (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:59" *) 1'h1;
  always @(posedge clk)
      inst_prev <= \inst_prev$next ;
  always @(posedge clk)
      stall_next3 <= \stall_next3$next ;
  always @(posedge clk)
      stall_next2 <= \stall_next2$next ;
  always @(posedge clk)
      stall_next <= \stall_next$next ;
  always @(posedge clk)
      jump_next3 <= \jump_next3$next ;
  always @(posedge clk)
      branch_next3 <= \branch_next3$next ;
  always @(posedge clk)
      jump_next2 <= \jump_next2$next ;
  always @(posedge clk)
      branch_next2 <= \branch_next2$next ;
  always @(posedge clk)
      jump_next <= \jump_next$next ;
  always @(posedge clk)
      branch_next <= \branch_next$next ;
  always @(posedge clk)
      buffer <= \buffer$next ;
  always @* begin
    \buffer$next  = buffer;
    \buffer$next  = IF2_out;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \buffer$next  = 32'd0;
    endcase
  end
  always @* begin
    \branch_next$next  = branch_next;
    \branch_next$next  = branch;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \branch_next$next  = 1'h0;
    endcase
  end
  always @* begin
    \inst_prev$next  = inst_prev;
    \inst_prev$next  = inst_out;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \inst_prev$next  = 32'd0;
    endcase
  end
  always @* begin
    inst_in = 32'd0;
    (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" *)
    casez ({ \$17 , \$15 , \$13 , \$11 , \$9 , \$7 , \$5 , \$3 , \$1  })
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" */
      9'bzzzzzzzz1:
          inst_in = IF2_out;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:51" */
      9'bzzzzzzz1z:
          inst_in = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:55" */
      9'bzzzzzz1zz:
          inst_in = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:59" */
      9'bzzzzz1zzz:
          inst_in = buffer;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:63" */
      9'bzzzz1zzzz:
          inst_in = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:67" */
      9'bzzz1zzzzz:
          inst_in = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:71" */
      9'bzz1zzzzzz:
          inst_in = buffer;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:75" */
      9'bz1zzzzzzz:
          inst_in = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:79" */
      9'h1zz:
          inst_in = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:83" */
      default:
          inst_in = IF2_out;
    endcase
  end
  always @* begin
    inst_out = 32'd0;
    (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" *)
    casez ({ \$35 , \$33 , \$31 , \$29 , \$27 , \$25 , \$23 , \$21 , \$19  })
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:47" */
      9'bzzzzzzzz1:
          inst_out = inst_prev;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:51" */
      9'bzzzzzzz1z:
          inst_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:55" */
      9'bzzzzzz1zz:
          inst_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:59" */
      9'bzzzzz1zzz:
          inst_out = inst_in;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:63" */
      9'bzzzz1zzzz:
          inst_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:67" */
      9'bzzz1zzzzz:
          inst_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:71" */
      9'bzz1zzzzzz:
          inst_out = inst_in;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:75" */
      9'bz1zzzzzzz:
          inst_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:79" */
      9'h1zz:
          inst_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:83" */
      default:
          inst_out = inst_in;
    endcase
  end
  always @* begin
    \jump_next$next  = jump_next;
    \jump_next$next  = jump;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \jump_next$next  = 1'h0;
    endcase
  end
  always @* begin
    \branch_next2$next  = branch_next2;
    \branch_next2$next  = branch_next;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \branch_next2$next  = 1'h0;
    endcase
  end
  always @* begin
    \jump_next2$next  = jump_next2;
    \jump_next2$next  = jump_next;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \jump_next2$next  = 1'h0;
    endcase
  end
  always @* begin
    \branch_next3$next  = branch_next3;
    \branch_next3$next  = branch_next2;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \branch_next3$next  = 1'h0;
    endcase
  end
  always @* begin
    \jump_next3$next  = jump_next3;
    \jump_next3$next  = jump_next2;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \jump_next3$next  = 1'h0;
    endcase
  end
  always @* begin
    \stall_next$next  = stall_next;
    \stall_next$next  = stall;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \stall_next$next  = 1'h0;
    endcase
  end
  always @* begin
    \stall_next2$next  = stall_next2;
    \stall_next2$next  = stall_next;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \stall_next2$next  = 1'h0;
    endcase
  end
  always @* begin
    \stall_next3$next  = stall_next3;
    \stall_next3$next  = stall_next2;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \stall_next3$next  = 1'h0;
    endcase
  end
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.M1_M2_pipeline" *)
module M1_M2_pipeline(web_out, reg_file_write_addr_in, reg_file_write_in, memory_reg_addr_out_out, s1_in, s2_in, csb_in, web_in, reg_file_write_out, s1_out, s2_out, rst, clk, csb_out);
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:26" *)
  input csb_in;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:27" *)
  output csb_out;
  reg csb_out = 1'h0;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:27" *)
  reg \csb_out$next ;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:18" *)
  wire [31:0] memory_data_out_out;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:16" *)
  input [4:0] memory_reg_addr_out_out;
  (* init = 5'h00 *)
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:17" *)
  output [4:0] reg_file_write_addr_in;
  reg [4:0] reg_file_write_addr_in = 5'h00;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:17" *)
  reg [4:0] \reg_file_write_addr_in$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:19" *)
  reg [31:0] reg_file_write_data_in = 32'd0;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:19" *)
  reg [31:0] \reg_file_write_data_in$next ;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:14" *)
  input reg_file_write_in;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:15" *)
  output reg_file_write_out;
  reg reg_file_write_out = 1'h0;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:15" *)
  reg \reg_file_write_out$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:21" *)
  input [4:0] s1_in;
  (* init = 5'h00 *)
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:23" *)
  output [4:0] s1_out;
  reg [4:0] s1_out = 5'h00;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:23" *)
  reg [4:0] \s1_out$next ;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:22" *)
  input [4:0] s2_in;
  (* init = 5'h00 *)
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:24" *)
  output [4:0] s2_out;
  reg [4:0] s2_out = 5'h00;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:24" *)
  reg [4:0] \s2_out$next ;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:28" *)
  input web_in;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:29" *)
  output web_out;
  reg web_out = 1'h0;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:29" *)
  reg \web_out$next ;
  always @(posedge clk)
      s2_out <= \s2_out$next ;
  always @(posedge clk)
      s1_out <= \s1_out$next ;
  always @(posedge clk)
      reg_file_write_data_in <= \reg_file_write_data_in$next ;
  always @(posedge clk)
      reg_file_write_addr_in <= \reg_file_write_addr_in$next ;
  always @(posedge clk)
      reg_file_write_out <= \reg_file_write_out$next ;
  always @(posedge clk)
      web_out <= \web_out$next ;
  always @(posedge clk)
      csb_out <= \csb_out$next ;
  always @* begin
    \reg_file_write_out$next  = reg_file_write_out;
    \reg_file_write_out$next  = reg_file_write_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \reg_file_write_out$next  = 1'h0;
    endcase
  end
  always @* begin
    \reg_file_write_addr_in$next  = reg_file_write_addr_in;
    \reg_file_write_addr_in$next  = memory_reg_addr_out_out;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \reg_file_write_addr_in$next  = 5'h00;
    endcase
  end
  always @* begin
    \reg_file_write_data_in$next  = reg_file_write_data_in;
    \reg_file_write_data_in$next  = memory_data_out_out;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \reg_file_write_data_in$next  = 32'd0;
    endcase
  end
  always @* begin
    \s1_out$next  = s1_out;
    \s1_out$next  = s1_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \s1_out$next  = 5'h00;
    endcase
  end
  always @* begin
    \s2_out$next  = s2_out;
    \s2_out$next  = s2_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \s2_out$next  = 5'h00;
    endcase
  end
  always @* begin
    \csb_out$next  = csb_out;
    \csb_out$next  = csb_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \csb_out$next  = 1'h0;
    endcase
  end
  always @* begin
    \web_out$next  = web_out;
    \web_out$next  = web_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \web_out$next  = 1'h0;
    endcase
  end
  assign memory_data_out_out = 32'd0;
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.M2_WB_pipeline" *)
module M2_WB_pipeline(web_out, reg_file_write_out, reg_file_write_in, memory_reg_addr_out_out, memory_data_out_out, s1_in, s2_in, csb_in, web_in, reg_file_write_addr_in, reg_file_write_data_in, rst, clk, csb_out);
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:26" *)
  input csb_in;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:27" *)
  output csb_out;
  reg csb_out = 1'h0;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:27" *)
  reg \csb_out$next ;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:18" *)
  input [31:0] memory_data_out_out;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:16" *)
  input [4:0] memory_reg_addr_out_out;
  (* init = 5'h00 *)
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:17" *)
  output [4:0] reg_file_write_addr_in;
  reg [4:0] reg_file_write_addr_in = 5'h00;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:17" *)
  reg [4:0] \reg_file_write_addr_in$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:19" *)
  output [31:0] reg_file_write_data_in;
  reg [31:0] reg_file_write_data_in = 32'd0;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:19" *)
  reg [31:0] \reg_file_write_data_in$next ;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:14" *)
  input reg_file_write_in;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:15" *)
  output reg_file_write_out;
  reg reg_file_write_out = 1'h0;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:15" *)
  reg \reg_file_write_out$next ;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:21" *)
  input [4:0] s1_in;
  (* init = 5'h00 *)
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:23" *)
  reg [4:0] s1_out = 5'h00;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:23" *)
  reg [4:0] \s1_out$next ;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:22" *)
  input [4:0] s2_in;
  (* init = 5'h00 *)
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:24" *)
  reg [4:0] s2_out = 5'h00;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:24" *)
  reg [4:0] \s2_out$next ;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:28" *)
  input web_in;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:29" *)
  output web_out;
  reg web_out = 1'h0;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:29" *)
  reg \web_out$next ;
  always @(posedge clk)
      web_out <= \web_out$next ;
  always @(posedge clk)
      csb_out <= \csb_out$next ;
  always @(posedge clk)
      s2_out <= \s2_out$next ;
  always @(posedge clk)
      s1_out <= \s1_out$next ;
  always @(posedge clk)
      reg_file_write_data_in <= \reg_file_write_data_in$next ;
  always @(posedge clk)
      reg_file_write_addr_in <= \reg_file_write_addr_in$next ;
  always @(posedge clk)
      reg_file_write_out <= \reg_file_write_out$next ;
  always @* begin
    \reg_file_write_out$next  = reg_file_write_out;
    \reg_file_write_out$next  = reg_file_write_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \reg_file_write_out$next  = 1'h0;
    endcase
  end
  always @* begin
    \reg_file_write_addr_in$next  = reg_file_write_addr_in;
    \reg_file_write_addr_in$next  = memory_reg_addr_out_out;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \reg_file_write_addr_in$next  = 5'h00;
    endcase
  end
  always @* begin
    \reg_file_write_data_in$next  = reg_file_write_data_in;
    \reg_file_write_data_in$next  = memory_data_out_out;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \reg_file_write_data_in$next  = 32'd0;
    endcase
  end
  always @* begin
    \s1_out$next  = s1_out;
    \s1_out$next  = s1_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \s1_out$next  = 5'h00;
    endcase
  end
  always @* begin
    \s2_out$next  = s2_out;
    \s2_out$next  = s2_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \s2_out$next  = 5'h00;
    endcase
  end
  always @* begin
    \csb_out$next  = csb_out;
    \csb_out$next  = csb_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \csb_out$next  = 1'h0;
    endcase
  end
  always @* begin
    \web_out$next  = web_out;
    \web_out$next  = web_in;
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \web_out$next  = 1'h0;
    endcase
  end
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.forwarding_alu" *)
module forwarding_alu(s2, s1_data, s2_data, des0, val0, csb0, web0, ra, rb, s1);
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *)
  wire \$1 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:32" *)
  wire \$11 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *)
  wire \$15 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *)
  wire \$17 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *)
  wire \$19 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *)
  wire \$21 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:41" *)
  wire \$23 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *)
  wire \$9 ;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:20" *)
  input csb0;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:18" *)
  input [4:0] des0;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:24" *)
  output [31:0] ra;
  reg [31:0] ra;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:25" *)
  output [31:0] rb;
  reg [31:0] rb;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:15" *)
  input [4:0] s1;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:13" *)
  input [31:0] s1_data;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:16" *)
  input [4:0] s2;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:14" *)
  input [31:0] s2_data;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:19" *)
  input [31:0] val0;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:21" *)
  input web0;
  assign \$9  = \$5  & (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *) \$7 ;
  assign \$11  = s1 != (* src = "/tmp/chipcron/all_stages/forward_alu.py:32" *) 1'h0;
  assign \$13  = s2 == (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *) des0;
  assign \$15  = csb0 == (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *) 1'h0;
  assign \$17  = \$13  & (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *) \$15 ;
  assign \$1  = s1 == (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *) des0;
  assign \$19  = web0 == (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *) 1'h1;
  assign \$21  = \$17  & (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *) \$19 ;
  assign \$23  = s2 != (* src = "/tmp/chipcron/all_stages/forward_alu.py:41" *) 1'h0;
  assign \$3  = csb0 == (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *) 1'h0;
  assign \$5  = \$1  & (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *) \$3 ;
  assign \$7  = web0 == (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *) 1'h1;
  always @* begin
    ra = 32'd0;
    (* src = "/tmp/chipcron/all_stages/forward_alu.py:31" *)
    casez (\$9 )
      /* src = "/tmp/chipcron/all_stages/forward_alu.py:31" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/forward_alu.py:32" *)
          casez (\$11 )
            /* src = "/tmp/chipcron/all_stages/forward_alu.py:32" */
            1'h1:
                ra = val0;
            /* src = "/tmp/chipcron/all_stages/forward_alu.py:34" */
            default:
                ra = s1_data;
          endcase
      /* src = "/tmp/chipcron/all_stages/forward_alu.py:37" */
      default:
          ra = s1_data;
    endcase
  end
  always @* begin
    rb = 32'd0;
    (* src = "/tmp/chipcron/all_stages/forward_alu.py:40" *)
    casez (\$21 )
      /* src = "/tmp/chipcron/all_stages/forward_alu.py:40" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/forward_alu.py:41" *)
          casez (\$23 )
            /* src = "/tmp/chipcron/all_stages/forward_alu.py:41" */
            1'h1:
                rb = val0;
            /* src = "/tmp/chipcron/all_stages/forward_alu.py:43" */
            default:
                rb = s2_data;
          endcase
      /* src = "/tmp/chipcron/all_stages/forward_alu.py:46" */
      default:
          rb = s2_data;
    endcase
  end
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.id_mux" *)
module id_mux(des_id, s1_id, s2_id, s1data_out_id, s2data_out_id, signextended_immediate_id, instruction_type_id, it0_id, it1_id, it2_id, it3_id, ifload_id, shamt_id, s1, s2, s1data_out, s2data_out, des, signextended_immediate, instruction_type, it0, it1, it2, it3, shamt, stall);
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$1 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$11 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$15 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$17 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$19 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$21 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$23 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$25 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
  wire \$9 ;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:30" *)
  output [4:0] des;
  reg [4:0] des;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:13" *)
  input [4:0] des_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:41" *)
  reg ifload;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:24" *)
  input ifload_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:36" *)
  output [2:0] instruction_type;
  reg [2:0] instruction_type;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:19" *)
  input [2:0] instruction_type_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:37" *)
  output [16:0] it0;
  reg [16:0] it0;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:20" *)
  input [16:0] it0_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:38" *)
  output [10:0] it1;
  reg [10:0] it1;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:21" *)
  input [10:0] it1_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:39" *)
  output [10:0] it2;
  reg [10:0] it2;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:22" *)
  input [10:0] it2_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:40" *)
  output [6:0] it3;
  reg [6:0] it3;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:23" *)
  input [6:0] it3_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:31" *)
  output [4:0] s1;
  reg [4:0] s1;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:14" *)
  input [4:0] s1_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:33" *)
  output [31:0] s1data_out;
  reg [31:0] s1data_out;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:16" *)
  input [31:0] s1data_out_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:32" *)
  output [4:0] s2;
  reg [4:0] s2;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:15" *)
  input [4:0] s2_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:34" *)
  output [31:0] s2data_out;
  reg [31:0] s2data_out;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:17" *)
  input [31:0] s2data_out_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:42" *)
  output [4:0] shamt;
  reg [4:0] shamt;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:25" *)
  input [4:0] shamt_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:35" *)
  output [31:0] signextended_immediate;
  reg [31:0] signextended_immediate;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:18" *)
  input [31:0] signextended_immediate_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:27" *)
  input stall;
  assign \$9  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$11  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$13  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$15  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$17  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$1  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$19  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$21  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$23  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$25  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$3  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$5  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  assign \$7  = stall == (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *) 1'h1;
  always @* begin
    des = 5'h00;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$1 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          des = 5'h00;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          des = des_id;
    endcase
  end
  always @* begin
    s1 = 5'h00;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$3 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          s1 = 5'h00;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          s1 = s1_id;
    endcase
  end
  always @* begin
    it3 = 7'h00;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$21 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          it3 = 7'h00;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          it3 = it3_id;
    endcase
  end
  always @* begin
    ifload = 1'h0;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$23 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          ifload = 1'h0;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          ifload = ifload_id;
    endcase
  end
  always @* begin
    shamt = 5'h00;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$25 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          shamt = 5'h00;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          shamt = shamt_id;
    endcase
  end
  always @* begin
    s2 = 5'h00;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$5 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          s2 = 5'h00;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          s2 = s2_id;
    endcase
  end
  always @* begin
    s1data_out = 32'd0;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$7 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          s1data_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          s1data_out = s1data_out_id;
    endcase
  end
  always @* begin
    s2data_out = 32'd0;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$9 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          s2data_out = 32'd0;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          s2data_out = s2data_out_id;
    endcase
  end
  always @* begin
    signextended_immediate = 32'd0;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$11 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          signextended_immediate = 32'd0;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          signextended_immediate = signextended_immediate_id;
    endcase
  end
  always @* begin
    instruction_type = 3'h0;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$13 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          instruction_type = 3'h0;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          instruction_type = instruction_type_id;
    endcase
  end
  always @* begin
    it0 = 17'h00000;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$15 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          it0 = 17'h00000;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          it0 = it0_id;
    endcase
  end
  always @* begin
    it1 = 11'h000;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$17 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          it1 = 11'h000;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          it1 = it1_id;
    endcase
  end
  always @* begin
    it2 = 11'h000;
    (* src = "/tmp/chipcron/all_stages/id_mux.py:46" *)
    casez (\$19 )
      /* src = "/tmp/chipcron/all_stages/id_mux.py:46" */
      1'h1:
          it2 = 11'h000;
      /* src = "/tmp/chipcron/all_stages/id_mux.py:62" */
      default:
          it2 = it2_id;
    endcase
  end
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.pc_controller" *)
module pc_controller(branch, jump, pc_in, ra, immediate, read_flag, pc, rst, clk, stall);
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:29" *)
  wire \$1 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *)
  wire [31:0] \$10 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *)
  wire [31:0] \$12 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/back/rtlil.py:525" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *)
  wire [32:0] \$16 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *)
  wire [33:0] \$18 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:40" *)
  wire [32:0] \$20 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:40" *)
  wire [31:0] \$21 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:40" *)
  wire [31:0] \$23 ;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/back/rtlil.py:525" *)
  wire \$24 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:40" *)
  wire [32:0] \$27 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:43" *)
  wire [8:0] \$29 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:33" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:43" *)
  wire [8:0] \$30 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:36" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:39" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *)
  wire [33:0] \$9 ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:14" *)
  input branch;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:16" *)
  input [31:0] immediate;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:15" *)
  input jump;
  (* init = 8'h00 *)
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:23" *)
  output [7:0] pc;
  reg [7:0] pc = 8'h00;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:23" *)
  reg [7:0] \pc$next ;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:18" *)
  input [7:0] pc_in;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:17" *)
  input [31:0] ra;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:20" *)
  input read_flag;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:13" *)
  input stall;
  assign \$10  = immediate / (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *) 3'h4;
  assign \$13  = immediate == (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/back/rtlil.py:525" *) 1'h0;
  assign \$12  = \$13  ? (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *) 32'd0 : \$10 ;
  assign \$16  = pc_in + (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *) \$12 ;
  assign \$18  = \$16  - (* src = "/tmp/chipcron/all_stages/pc_controller.py:37" *) 2'h3;
  assign \$1  = read_flag == (* src = "/tmp/chipcron/all_stages/pc_controller.py:29" *) 1'h0;
  assign \$21  = immediate / (* src = "/tmp/chipcron/all_stages/pc_controller.py:40" *) 3'h4;
  assign \$24  = immediate == (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/back/rtlil.py:525" *) 1'h0;
  assign \$23  = \$24  ? (* src = "/tmp/chipcron/all_stages/pc_controller.py:40" *) 32'd0 : \$21 ;
  assign \$27  = ra + (* src = "/tmp/chipcron/all_stages/pc_controller.py:40" *) \$23 ;
  assign \$30  = pc_in + (* src = "/tmp/chipcron/all_stages/pc_controller.py:43" *) 1'h1;
  assign \$3  = stall == (* src = "/tmp/chipcron/all_stages/pc_controller.py:33" *) 1'h1;
  assign \$5  = branch == (* src = "/tmp/chipcron/all_stages/pc_controller.py:36" *) 1'h1;
  assign \$7  = jump == (* src = "/tmp/chipcron/all_stages/pc_controller.py:39" *) 1'h1;
  always @(posedge clk)
      pc <= \pc$next ;
  always @* begin
    \pc$next  = pc;
    (* src = "/tmp/chipcron/all_stages/pc_controller.py:29" *)
    casez (\$1 )
      /* src = "/tmp/chipcron/all_stages/pc_controller.py:29" */
      1'h1:
          \pc$next  = 8'h00;
      /* src = "/tmp/chipcron/all_stages/pc_controller.py:32" */
      default:
          (* src = "/tmp/chipcron/all_stages/pc_controller.py:33" *)
          casez ({ \$7 , \$5 , \$3  })
            /* src = "/tmp/chipcron/all_stages/pc_controller.py:33" */
            3'bzz1:
                \pc$next  = pc_in;
            /* src = "/tmp/chipcron/all_stages/pc_controller.py:36" */
            3'bz1z:
                \pc$next  = \$9 [7:0];
            /* src = "/tmp/chipcron/all_stages/pc_controller.py:39" */
            3'b1zz:
                \pc$next  = \$20 [7:0];
            /* src = "/tmp/chipcron/all_stages/pc_controller.py:42" */
            default:
                \pc$next  = \$29 [7:0];
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (rst)
      1'h1:
          \pc$next  = 8'h00;
    endcase
  end
  assign \$9  = \$18 ;
  assign \$20  = \$27 ;
  assign \$29  = \$30 ;
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.reg_file" *)
module reg_file(write_alu, csb_mem, web_mem, write_mem, pc, load_Rs1_addr, load_Rs2_addr, write_Rs1_data, write_Rs2_data, write_addr_mem, write_data_mem, write_addr_alu, write_data_alu, \$signal , gpio_input, neg_rst, neg_clk, csb_alu);
  reg \$101 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$102 ;
  reg \$104 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$105 ;
  reg \$107 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$108 ;
  reg \$110 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$111 ;
  reg \$113 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$114 ;
  reg \$116 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$117 ;
  reg \$119 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$120 ;
  reg \$122 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$123 ;
  reg \$125 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$126 ;
  reg \$128 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$129 ;
  reg \$131 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$132 ;
  reg \$134 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$135 ;
  reg \$137 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$138 ;
  reg \$140 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$141 ;
  reg \$143 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$144 ;
  reg \$146 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$147 ;
  reg \$149 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$150 ;
  reg \$152 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$153 ;
  reg \$155 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$156 ;
  reg \$158 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$159 ;
  reg \$161 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$162 ;
  reg \$164 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$165 ;
  reg \$167 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$168 ;
  reg \$170 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$171 ;
  reg \$173 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$174 ;
  reg \$176 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$177 ;
  reg \$179 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$180 ;
  reg \$182 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$183 ;
  reg \$185 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$186 ;
  reg \$188 ;
  reg \$189 ;
  reg \$190 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:81" *)
  wire \$191 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$193 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$195 ;
  reg \$197 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$198 ;
  reg \$200 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$201 ;
  reg \$203 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$204 ;
  reg \$206 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$207 ;
  reg \$209 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$210 ;
  reg \$212 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$213 ;
  reg \$215 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$216 ;
  reg \$218 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$219 ;
  reg \$221 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$222 ;
  reg \$224 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$225 ;
  reg \$227 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$228 ;
  reg \$230 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$231 ;
  reg \$233 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$234 ;
  reg \$236 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$237 ;
  reg \$239 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$240 ;
  reg \$242 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$243 ;
  reg \$245 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$246 ;
  reg \$248 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$249 ;
  reg \$251 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$252 ;
  reg \$254 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$255 ;
  reg \$257 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$258 ;
  reg \$260 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$261 ;
  reg \$263 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$264 ;
  reg \$266 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$267 ;
  reg \$269 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$270 ;
  reg \$272 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$273 ;
  reg \$275 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$276 ;
  reg \$278 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$279 ;
  reg \$281 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$282 ;
  reg \$284 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$285 ;
  reg \$287 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  wire [32:0] \$288 ;
  reg \$290 ;
  reg \$291 ;
  reg \$292 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$293 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$294 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$295 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$297 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$298 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$300 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$301 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$303 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$304 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$306 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$307 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$309 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$310 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$312 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$313 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$315 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$316 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$318 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$319 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$321 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$322 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$324 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$325 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$327 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$328 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:55" *)
  wire \$33 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$330 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$331 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$333 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$334 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$336 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$337 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$339 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$340 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$342 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$343 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$345 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$346 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$348 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$349 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
  wire \$35 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$351 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$352 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$354 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$355 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$357 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$358 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$360 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$361 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$363 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$364 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$366 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$367 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$369 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
  wire \$37 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$370 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$372 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$373 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$375 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$376 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$378 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$379 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$381 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$382 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$384 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$385 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
  wire [32:0] \$387 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$388 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
  wire \$39 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$390 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$391 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$392 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$394 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$395 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$397 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$398 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$400 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$401 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$403 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$404 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$406 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$407 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$409 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:81" *)
  wire \$41 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$410 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$412 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$413 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$415 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$416 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$418 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$419 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$421 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$422 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$424 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$425 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$427 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$428 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$430 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$431 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$433 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$434 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$436 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$437 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$439 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$440 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$442 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$443 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$445 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$446 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$448 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$449 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$451 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$452 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$454 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$455 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$457 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$458 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$460 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$461 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$463 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$464 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$466 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$467 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$469 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$470 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$472 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$473 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$475 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$476 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$478 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$479 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$481 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$482 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
  wire [32:0] \$484 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [32:0] \$485 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:55" *)
  wire \$74 ;
  reg \$76 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:60" *)
  wire \$77 ;
  reg \$79 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:42" *)
  wire [32:0] \$80 ;
  reg \$82 ;
  reg \$83 ;
  reg \$84 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
  wire \$85 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
  wire \$87 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
  wire \$89 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$91 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$93 ;
  reg \$95 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$96 ;
  reg \$98 ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  wire [32:0] \$99 ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  output [31:0] \$signal ;
  reg [31:0] \$signal  = 32'd0;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$1  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$1$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$10  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$10$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$11  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$11$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$12  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$12$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$13  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$13$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$14  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$14$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$15  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$15$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$16  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$16$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$17  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$17$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$18  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$18$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$19  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$19$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$2  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$2$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$20  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$20$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$21  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$21$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$22  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$22$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$23  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$23$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$24  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$24$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$25  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$25$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$26  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$26$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$27  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$27$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$28  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$28$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$29  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$29$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$3  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$3$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$30  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$30$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$31  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$31$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$32  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$32$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$4  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$4$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$43  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$43$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$44  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$44$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$45  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$45$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$46  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$46$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$47  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$47$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$48  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$48$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$49  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$49$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$5  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$5$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$50  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$50$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$51  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$51$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$52  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$52$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$53  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$53$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$54  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$54$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$55  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$55$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$56  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$56$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$57  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$57$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$58  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$58$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$59  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$59$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$6  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$6$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$60  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$60$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$61  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$61$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$62  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$62$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$63  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$63$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$64  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$64$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$65  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$65$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$66  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$66$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$67  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$67$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$68  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$68$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$69  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$69$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$7  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$7$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$70  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$70$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$71  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$71$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$72  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$72$next ;
  (* init = 32'd0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$73  = 32'd0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$73$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$8  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$8$next ;
  (* init = 1'h0 *)
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$9  = 1'h0;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:47" *)
  reg \$signal$9$next ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  reg [31:0] \$signal$next ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:33" *)
  input csb_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:39" *)
  input csb_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:42" *)
  input [31:0] gpio_input;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:26" *)
  input [4:0] load_Rs1_addr;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:27" *)
  input [4:0] load_Rs2_addr;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input neg_clk;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input neg_rst;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:28" *)
  input [7:0] pc;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:40" *)
  input web_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:45" *)
  output [31:0] write_Rs1_data;
  reg [31:0] write_Rs1_data;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:46" *)
  output [31:0] write_Rs2_data;
  reg [31:0] write_Rs2_data;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:31" *)
  input [4:0] write_addr_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:37" *)
  input [4:0] write_addr_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:30" *)
  input write_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  input [31:0] write_data_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  input [31:0] write_data_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:36" *)
  input write_mem;
  assign \$99  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$102  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$105  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$108  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$111  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$114  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$117  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$120  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$123  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$126  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$129  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$132  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$135  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$138  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$141  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$144  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$147  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$150  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$153  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$156  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$159  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$162  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$165  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$168  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$171  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$174  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$177  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$180  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$183  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$186  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$191  = csb_alu != (* src = "/tmp/chipcron/all_stages/reg_file.py:81" *) 1'h0;
  assign \$193  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$195  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$198  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$201  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$204  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$207  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$210  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$213  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$216  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$219  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$222  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$225  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$228  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$231  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$234  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$237  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$240  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$243  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$246  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$249  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$252  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$255  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$258  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$261  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$264  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$267  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$270  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$273  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$276  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$279  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$282  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$285  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$288  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *) write_data_alu;
  assign \$295  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$43 );
  assign \$298  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$44 );
  assign \$301  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$45 );
  assign \$304  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$46 );
  assign \$307  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$47 );
  assign \$310  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$48 );
  assign \$313  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$49 );
  assign \$316  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$50 );
  assign \$319  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$51 );
  assign \$322  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$52 );
  assign \$325  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$53 );
  assign \$328  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$54 );
  assign \$331  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$55 );
  assign \$334  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$56 );
  assign \$337  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$57 );
  assign \$33  = pc < (* src = "/tmp/chipcron/all_stages/reg_file.py:55" *) 2'h3;
  assign \$340  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$58 );
  assign \$343  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$59 );
  assign \$346  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$60 );
  assign \$349  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$61 );
  assign \$352  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$62 );
  assign \$355  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$63 );
  assign \$358  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$64 );
  assign \$35  = csb_mem == (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *) 1'h0;
  assign \$361  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$65 );
  assign \$364  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$66 );
  assign \$367  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$67 );
  assign \$370  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$68 );
  assign \$373  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$69 );
  assign \$376  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$70 );
  assign \$37  = web_mem == (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *) 1'h1;
  assign \$379  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$71 );
  assign \$382  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$72 );
  assign \$385  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal );
  assign \$388  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$73 );
  assign \$392  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$43 );
  assign \$395  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$44 );
  assign \$398  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$45 );
  assign \$39  = \$35  & (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *) \$37 ;
  assign \$401  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$46 );
  assign \$404  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$47 );
  assign \$407  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$48 );
  assign \$410  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$49 );
  assign \$413  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$50 );
  assign \$416  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$51 );
  assign \$41  = csb_alu != (* src = "/tmp/chipcron/all_stages/reg_file.py:81" *) 1'h0;
  assign \$419  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$52 );
  assign \$422  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$53 );
  assign \$425  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$54 );
  assign \$428  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$55 );
  assign \$431  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$56 );
  assign \$434  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$57 );
  assign \$437  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$58 );
  assign \$440  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$59 );
  assign \$443  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$60 );
  assign \$446  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$61 );
  assign \$449  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$62 );
  assign \$452  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$63 );
  assign \$455  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$64 );
  assign \$458  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$65 );
  assign \$461  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$66 );
  assign \$464  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$67 );
  assign \$467  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$68 );
  assign \$470  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$69 );
  assign \$473  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$70 );
  assign \$476  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$71 );
  assign \$479  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$72 );
  assign \$482  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal );
  assign \$485  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *) $signed(\$signal$73 );
  assign \$74  = pc < (* src = "/tmp/chipcron/all_stages/reg_file.py:55" *) 2'h3;
  assign \$77  = \$signal$3  == (* src = "/tmp/chipcron/all_stages/reg_file.py:60" *) 1'h0;
  assign \$80  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:42" *) gpio_input;
  assign \$85  = csb_mem == (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *) 1'h0;
  assign \$87  = web_mem == (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *) 1'h1;
  assign \$89  = \$85  & (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *) \$87 ;
  assign \$91  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$93  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  assign \$96  = + (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *) write_data_mem;
  always @(posedge neg_clk)
      \$signal$43  <= \$signal$43$next ;
  always @(posedge neg_clk)
      \$signal$44  <= \$signal$44$next ;
  always @(posedge neg_clk)
      \$signal$45  <= \$signal$45$next ;
  always @(posedge neg_clk)
      \$signal$46  <= \$signal$46$next ;
  always @(posedge neg_clk)
      \$signal$47  <= \$signal$47$next ;
  always @(posedge neg_clk)
      \$signal$48  <= \$signal$48$next ;
  always @(posedge neg_clk)
      \$signal$49  <= \$signal$49$next ;
  always @(posedge neg_clk)
      \$signal$50  <= \$signal$50$next ;
  always @(posedge neg_clk)
      \$signal$51  <= \$signal$51$next ;
  always @(posedge neg_clk)
      \$signal$52  <= \$signal$52$next ;
  always @(posedge neg_clk)
      \$signal$53  <= \$signal$53$next ;
  always @(posedge neg_clk)
      \$signal$54  <= \$signal$54$next ;
  always @(posedge neg_clk)
      \$signal$55  <= \$signal$55$next ;
  always @(posedge neg_clk)
      \$signal$56  <= \$signal$56$next ;
  always @(posedge neg_clk)
      \$signal$57  <= \$signal$57$next ;
  always @(posedge neg_clk)
      \$signal$58  <= \$signal$58$next ;
  always @(posedge neg_clk)
      \$signal$59  <= \$signal$59$next ;
  always @(posedge neg_clk)
      \$signal$60  <= \$signal$60$next ;
  always @(posedge neg_clk)
      \$signal$61  <= \$signal$61$next ;
  always @(posedge neg_clk)
      \$signal$62  <= \$signal$62$next ;
  always @(posedge neg_clk)
      \$signal$63  <= \$signal$63$next ;
  always @(posedge neg_clk)
      \$signal$64  <= \$signal$64$next ;
  always @(posedge neg_clk)
      \$signal$65  <= \$signal$65$next ;
  always @(posedge neg_clk)
      \$signal$66  <= \$signal$66$next ;
  always @(posedge neg_clk)
      \$signal$67  <= \$signal$67$next ;
  always @(posedge neg_clk)
      \$signal$68  <= \$signal$68$next ;
  always @(posedge neg_clk)
      \$signal$69  <= \$signal$69$next ;
  always @(posedge neg_clk)
      \$signal$70  <= \$signal$70$next ;
  always @(posedge neg_clk)
      \$signal$71  <= \$signal$71$next ;
  always @(posedge neg_clk)
      \$signal$72  <= \$signal$72$next ;
  always @(posedge neg_clk)
      \$signal  <= \$signal$next ;
  always @(posedge neg_clk)
      \$signal$73  <= \$signal$73$next ;
  always @(posedge neg_clk)
      \$signal$1  <= \$signal$1$next ;
  always @(posedge neg_clk)
      \$signal$2  <= \$signal$2$next ;
  always @(posedge neg_clk)
      \$signal$3  <= \$signal$3$next ;
  always @(posedge neg_clk)
      \$signal$4  <= \$signal$4$next ;
  always @(posedge neg_clk)
      \$signal$5  <= \$signal$5$next ;
  always @(posedge neg_clk)
      \$signal$6  <= \$signal$6$next ;
  always @(posedge neg_clk)
      \$signal$7  <= \$signal$7$next ;
  always @(posedge neg_clk)
      \$signal$8  <= \$signal$8$next ;
  always @(posedge neg_clk)
      \$signal$9  <= \$signal$9$next ;
  always @(posedge neg_clk)
      \$signal$10  <= \$signal$10$next ;
  always @(posedge neg_clk)
      \$signal$11  <= \$signal$11$next ;
  always @(posedge neg_clk)
      \$signal$12  <= \$signal$12$next ;
  always @(posedge neg_clk)
      \$signal$13  <= \$signal$13$next ;
  always @(posedge neg_clk)
      \$signal$14  <= \$signal$14$next ;
  always @(posedge neg_clk)
      \$signal$15  <= \$signal$15$next ;
  always @(posedge neg_clk)
      \$signal$16  <= \$signal$16$next ;
  always @(posedge neg_clk)
      \$signal$17  <= \$signal$17$next ;
  always @(posedge neg_clk)
      \$signal$18  <= \$signal$18$next ;
  always @(posedge neg_clk)
      \$signal$19  <= \$signal$19$next ;
  always @(posedge neg_clk)
      \$signal$20  <= \$signal$20$next ;
  always @(posedge neg_clk)
      \$signal$21  <= \$signal$21$next ;
  always @(posedge neg_clk)
      \$signal$22  <= \$signal$22$next ;
  always @(posedge neg_clk)
      \$signal$23  <= \$signal$23$next ;
  always @(posedge neg_clk)
      \$signal$24  <= \$signal$24$next ;
  always @(posedge neg_clk)
      \$signal$25  <= \$signal$25$next ;
  always @(posedge neg_clk)
      \$signal$26  <= \$signal$26$next ;
  always @(posedge neg_clk)
      \$signal$27  <= \$signal$27$next ;
  always @(posedge neg_clk)
      \$signal$28  <= \$signal$28$next ;
  always @(posedge neg_clk)
      \$signal$29  <= \$signal$29$next ;
  always @(posedge neg_clk)
      \$signal$30  <= \$signal$30$next ;
  always @(posedge neg_clk)
      \$signal$31  <= \$signal$31$next ;
  always @(posedge neg_clk)
      \$signal$32  <= \$signal$32$next ;
  always @* begin
    \$signal$1$next  = \$signal$1 ;
    \$signal$2$next  = \$signal$2 ;
    \$signal$3$next  = \$signal$3 ;
    \$signal$4$next  = \$signal$4 ;
    \$signal$5$next  = \$signal$5 ;
    \$signal$6$next  = \$signal$6 ;
    \$signal$7$next  = \$signal$7 ;
    \$signal$8$next  = \$signal$8 ;
    \$signal$9$next  = \$signal$9 ;
    \$signal$10$next  = \$signal$10 ;
    \$signal$11$next  = \$signal$11 ;
    \$signal$12$next  = \$signal$12 ;
    \$signal$13$next  = \$signal$13 ;
    \$signal$14$next  = \$signal$14 ;
    \$signal$15$next  = \$signal$15 ;
    \$signal$16$next  = \$signal$16 ;
    \$signal$17$next  = \$signal$17 ;
    \$signal$18$next  = \$signal$18 ;
    \$signal$19$next  = \$signal$19 ;
    \$signal$20$next  = \$signal$20 ;
    \$signal$21$next  = \$signal$21 ;
    \$signal$22$next  = \$signal$22 ;
    \$signal$23$next  = \$signal$23 ;
    \$signal$24$next  = \$signal$24 ;
    \$signal$25$next  = \$signal$25 ;
    \$signal$26$next  = \$signal$26 ;
    \$signal$27$next  = \$signal$27 ;
    \$signal$28$next  = \$signal$28 ;
    \$signal$29$next  = \$signal$29 ;
    \$signal$30$next  = \$signal$30 ;
    \$signal$31$next  = \$signal$31 ;
    \$signal$32$next  = \$signal$32 ;
    (* src = "/tmp/chipcron/all_stages/reg_file.py:55" *)
    casez (\$33 )
      /* src = "/tmp/chipcron/all_stages/reg_file.py:55" */
      1'h1:
          \$signal$3$next  = 1'h0;
    endcase
    (* src = "/tmp/chipcron/all_stages/reg_file.py:69" *)
    casez (write_mem)
      /* src = "/tmp/chipcron/all_stages/reg_file.py:69" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
          casez (\$39 )
            /* src = "/tmp/chipcron/all_stages/reg_file.py:70" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/reg_file.py:72" *)
                casez (write_addr_mem)
                  5'h00:
                      \$signal$1$next  = 1'h1;
                  5'h01:
                      \$signal$2$next  = 1'h1;
                  5'h02:
                      \$signal$3$next  = 1'h1;
                  5'h03:
                      \$signal$4$next  = 1'h1;
                  5'h04:
                      \$signal$5$next  = 1'h1;
                  5'h05:
                      \$signal$6$next  = 1'h1;
                  5'h06:
                      \$signal$7$next  = 1'h1;
                  5'h07:
                      \$signal$8$next  = 1'h1;
                  5'h08:
                      \$signal$9$next  = 1'h1;
                  5'h09:
                      \$signal$10$next  = 1'h1;
                  5'h0a:
                      \$signal$11$next  = 1'h1;
                  5'h0b:
                      \$signal$12$next  = 1'h1;
                  5'h0c:
                      \$signal$13$next  = 1'h1;
                  5'h0d:
                      \$signal$14$next  = 1'h1;
                  5'h0e:
                      \$signal$15$next  = 1'h1;
                  5'h0f:
                      \$signal$16$next  = 1'h1;
                  5'h10:
                      \$signal$17$next  = 1'h1;
                  5'h11:
                      \$signal$18$next  = 1'h1;
                  5'h12:
                      \$signal$19$next  = 1'h1;
                  5'h13:
                      \$signal$20$next  = 1'h1;
                  5'h14:
                      \$signal$21$next  = 1'h1;
                  5'h15:
                      \$signal$22$next  = 1'h1;
                  5'h16:
                      \$signal$23$next  = 1'h1;
                  5'h17:
                      \$signal$24$next  = 1'h1;
                  5'h18:
                      \$signal$25$next  = 1'h1;
                  5'h19:
                      \$signal$26$next  = 1'h1;
                  5'h1a:
                      \$signal$27$next  = 1'h1;
                  5'h1b:
                      \$signal$28$next  = 1'h1;
                  5'h1c:
                      \$signal$29$next  = 1'h1;
                  5'h1d:
                      \$signal$30$next  = 1'h1;
                  5'h1e:
                      \$signal$31$next  = 1'h1;
                  5'hzz:
                      \$signal$32$next  = 1'h1;
                endcase
          endcase
    endcase
    (* src = "/tmp/chipcron/all_stages/reg_file.py:80" *)
    casez (write_alu)
      /* src = "/tmp/chipcron/all_stages/reg_file.py:80" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/reg_file.py:81" *)
          casez (\$41 )
            /* src = "/tmp/chipcron/all_stages/reg_file.py:81" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/reg_file.py:83" *)
                casez (write_addr_alu)
                  5'h00:
                      \$signal$1$next  = 1'h1;
                  5'h01:
                      \$signal$2$next  = 1'h1;
                  5'h02:
                      \$signal$3$next  = 1'h1;
                  5'h03:
                      \$signal$4$next  = 1'h1;
                  5'h04:
                      \$signal$5$next  = 1'h1;
                  5'h05:
                      \$signal$6$next  = 1'h1;
                  5'h06:
                      \$signal$7$next  = 1'h1;
                  5'h07:
                      \$signal$8$next  = 1'h1;
                  5'h08:
                      \$signal$9$next  = 1'h1;
                  5'h09:
                      \$signal$10$next  = 1'h1;
                  5'h0a:
                      \$signal$11$next  = 1'h1;
                  5'h0b:
                      \$signal$12$next  = 1'h1;
                  5'h0c:
                      \$signal$13$next  = 1'h1;
                  5'h0d:
                      \$signal$14$next  = 1'h1;
                  5'h0e:
                      \$signal$15$next  = 1'h1;
                  5'h0f:
                      \$signal$16$next  = 1'h1;
                  5'h10:
                      \$signal$17$next  = 1'h1;
                  5'h11:
                      \$signal$18$next  = 1'h1;
                  5'h12:
                      \$signal$19$next  = 1'h1;
                  5'h13:
                      \$signal$20$next  = 1'h1;
                  5'h14:
                      \$signal$21$next  = 1'h1;
                  5'h15:
                      \$signal$22$next  = 1'h1;
                  5'h16:
                      \$signal$23$next  = 1'h1;
                  5'h17:
                      \$signal$24$next  = 1'h1;
                  5'h18:
                      \$signal$25$next  = 1'h1;
                  5'h19:
                      \$signal$26$next  = 1'h1;
                  5'h1a:
                      \$signal$27$next  = 1'h1;
                  5'h1b:
                      \$signal$28$next  = 1'h1;
                  5'h1c:
                      \$signal$29$next  = 1'h1;
                  5'h1d:
                      \$signal$30$next  = 1'h1;
                  5'h1e:
                      \$signal$31$next  = 1'h1;
                  5'hzz:
                      \$signal$32$next  = 1'h1;
                endcase
          endcase
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (neg_rst)
      1'h1:
        begin
          \$signal$1$next  = 1'h0;
          \$signal$2$next  = 1'h0;
          \$signal$3$next  = 1'h0;
          \$signal$4$next  = 1'h0;
          \$signal$5$next  = 1'h0;
          \$signal$6$next  = 1'h0;
          \$signal$7$next  = 1'h0;
          \$signal$8$next  = 1'h0;
          \$signal$9$next  = 1'h0;
          \$signal$10$next  = 1'h0;
          \$signal$11$next  = 1'h0;
          \$signal$12$next  = 1'h0;
          \$signal$13$next  = 1'h0;
          \$signal$14$next  = 1'h0;
          \$signal$15$next  = 1'h0;
          \$signal$16$next  = 1'h0;
          \$signal$17$next  = 1'h0;
          \$signal$18$next  = 1'h0;
          \$signal$19$next  = 1'h0;
          \$signal$20$next  = 1'h0;
          \$signal$21$next  = 1'h0;
          \$signal$22$next  = 1'h0;
          \$signal$23$next  = 1'h0;
          \$signal$24$next  = 1'h0;
          \$signal$25$next  = 1'h0;
          \$signal$26$next  = 1'h0;
          \$signal$27$next  = 1'h0;
          \$signal$28$next  = 1'h0;
          \$signal$29$next  = 1'h0;
          \$signal$30$next  = 1'h0;
          \$signal$31$next  = 1'h0;
          \$signal$32$next  = 1'h0;
        end
    endcase
  end
  always @* begin
    \$signal$43$next  = \$signal$43 ;
    \$signal$44$next  = \$signal$44 ;
    \$signal$45$next  = \$signal$45 ;
    \$signal$46$next  = \$signal$46 ;
    \$signal$47$next  = \$signal$47 ;
    \$signal$48$next  = \$signal$48 ;
    \$signal$49$next  = \$signal$49 ;
    \$signal$50$next  = \$signal$50 ;
    \$signal$51$next  = \$signal$51 ;
    \$signal$52$next  = \$signal$52 ;
    \$signal$53$next  = \$signal$53 ;
    \$signal$54$next  = \$signal$54 ;
    \$signal$55$next  = \$signal$55 ;
    \$signal$56$next  = \$signal$56 ;
    \$signal$57$next  = \$signal$57 ;
    \$signal$58$next  = \$signal$58 ;
    \$signal$59$next  = \$signal$59 ;
    \$signal$60$next  = \$signal$60 ;
    \$signal$61$next  = \$signal$61 ;
    \$signal$62$next  = \$signal$62 ;
    \$signal$63$next  = \$signal$63 ;
    \$signal$64$next  = \$signal$64 ;
    \$signal$65$next  = \$signal$65 ;
    \$signal$66$next  = \$signal$66 ;
    \$signal$67$next  = \$signal$67 ;
    \$signal$68$next  = \$signal$68 ;
    \$signal$69$next  = \$signal$69 ;
    \$signal$70$next  = \$signal$70 ;
    \$signal$71$next  = \$signal$71 ;
    \$signal$72$next  = \$signal$72 ;
    \$signal$next  = \$signal ;
    \$signal$73$next  = \$signal$73 ;
    (* src = "/tmp/chipcron/all_stages/reg_file.py:55" *)
    casez (\$74 )
      /* src = "/tmp/chipcron/all_stages/reg_file.py:55" */
      1'h1:
          { \$76 , \$signal$45$next  } = 33'h0000000ff;
    endcase
    (* src = "/tmp/chipcron/all_stages/reg_file.py:60" *)
    casez (\$77 )
      /* src = "/tmp/chipcron/all_stages/reg_file.py:60" */
      1'h1:
          { \$79 , \$signal$45$next  } = 33'h0000000ff;
    endcase
    begin
        { \$82 , \$signal$next  } = \$80 ;
    end
    begin
        { \$83 , \$signal$46$next  } = 33'h0000008ff;
    end
    begin
        { \$84 , \$signal$43$next  } = 33'h000000000;
    end
    (* src = "/tmp/chipcron/all_stages/reg_file.py:69" *)
    casez (write_mem)
      /* src = "/tmp/chipcron/all_stages/reg_file.py:69" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/reg_file.py:70" *)
          casez (\$89 )
            /* src = "/tmp/chipcron/all_stages/reg_file.py:70" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/reg_file.py:71" *)
                casez (write_addr_mem)
                  5'h00:
                      { \$95 , \$signal$43$next  } = \$93 ;
                  5'h01:
                      { \$98 , \$signal$44$next  } = \$96 ;
                  5'h02:
                      { \$101 , \$signal$45$next  } = \$99 ;
                  5'h03:
                      { \$104 , \$signal$46$next  } = \$102 ;
                  5'h04:
                      { \$107 , \$signal$47$next  } = \$105 ;
                  5'h05:
                      { \$110 , \$signal$48$next  } = \$108 ;
                  5'h06:
                      { \$113 , \$signal$49$next  } = \$111 ;
                  5'h07:
                      { \$116 , \$signal$50$next  } = \$114 ;
                  5'h08:
                      { \$119 , \$signal$51$next  } = \$117 ;
                  5'h09:
                      { \$122 , \$signal$52$next  } = \$120 ;
                  5'h0a:
                      { \$125 , \$signal$53$next  } = \$123 ;
                  5'h0b:
                      { \$128 , \$signal$54$next  } = \$126 ;
                  5'h0c:
                      { \$131 , \$signal$55$next  } = \$129 ;
                  5'h0d:
                      { \$134 , \$signal$56$next  } = \$132 ;
                  5'h0e:
                      { \$137 , \$signal$57$next  } = \$135 ;
                  5'h0f:
                      { \$140 , \$signal$58$next  } = \$138 ;
                  5'h10:
                      { \$143 , \$signal$59$next  } = \$141 ;
                  5'h11:
                      { \$146 , \$signal$60$next  } = \$144 ;
                  5'h12:
                      { \$149 , \$signal$61$next  } = \$147 ;
                  5'h13:
                      { \$152 , \$signal$62$next  } = \$150 ;
                  5'h14:
                      { \$155 , \$signal$63$next  } = \$153 ;
                  5'h15:
                      { \$158 , \$signal$64$next  } = \$156 ;
                  5'h16:
                      { \$161 , \$signal$65$next  } = \$159 ;
                  5'h17:
                      { \$164 , \$signal$66$next  } = \$162 ;
                  5'h18:
                      { \$167 , \$signal$67$next  } = \$165 ;
                  5'h19:
                      { \$170 , \$signal$68$next  } = \$168 ;
                  5'h1a:
                      { \$173 , \$signal$69$next  } = \$171 ;
                  5'h1b:
                      { \$176 , \$signal$70$next  } = \$174 ;
                  5'h1c:
                      { \$179 , \$signal$71$next  } = \$177 ;
                  5'h1d:
                      { \$182 , \$signal$72$next  } = \$180 ;
                  5'h1e:
                      { \$185 , \$signal$next  } = \$183 ;
                  5'hzz:
                      { \$188 , \$signal$73$next  } = \$186 ;
                endcase
            /* src = "/tmp/chipcron/all_stages/reg_file.py:73" */
            default:
                { \$189 , \$signal$43$next  } = 33'h000000000;
          endcase
      /* src = "/tmp/chipcron/all_stages/reg_file.py:76" */
      default:
          { \$190 , \$signal$43$next  } = 33'h000000000;
    endcase
    (* src = "/tmp/chipcron/all_stages/reg_file.py:80" *)
    casez (write_alu)
      /* src = "/tmp/chipcron/all_stages/reg_file.py:80" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/reg_file.py:81" *)
          casez (\$191 )
            /* src = "/tmp/chipcron/all_stages/reg_file.py:81" */
            1'h1:
                (* src = "/tmp/chipcron/all_stages/reg_file.py:82" *)
                casez (write_addr_alu)
                  5'h00:
                      { \$197 , \$signal$43$next  } = \$195 ;
                  5'h01:
                      { \$200 , \$signal$44$next  } = \$198 ;
                  5'h02:
                      { \$203 , \$signal$45$next  } = \$201 ;
                  5'h03:
                      { \$206 , \$signal$46$next  } = \$204 ;
                  5'h04:
                      { \$209 , \$signal$47$next  } = \$207 ;
                  5'h05:
                      { \$212 , \$signal$48$next  } = \$210 ;
                  5'h06:
                      { \$215 , \$signal$49$next  } = \$213 ;
                  5'h07:
                      { \$218 , \$signal$50$next  } = \$216 ;
                  5'h08:
                      { \$221 , \$signal$51$next  } = \$219 ;
                  5'h09:
                      { \$224 , \$signal$52$next  } = \$222 ;
                  5'h0a:
                      { \$227 , \$signal$53$next  } = \$225 ;
                  5'h0b:
                      { \$230 , \$signal$54$next  } = \$228 ;
                  5'h0c:
                      { \$233 , \$signal$55$next  } = \$231 ;
                  5'h0d:
                      { \$236 , \$signal$56$next  } = \$234 ;
                  5'h0e:
                      { \$239 , \$signal$57$next  } = \$237 ;
                  5'h0f:
                      { \$242 , \$signal$58$next  } = \$240 ;
                  5'h10:
                      { \$245 , \$signal$59$next  } = \$243 ;
                  5'h11:
                      { \$248 , \$signal$60$next  } = \$246 ;
                  5'h12:
                      { \$251 , \$signal$61$next  } = \$249 ;
                  5'h13:
                      { \$254 , \$signal$62$next  } = \$252 ;
                  5'h14:
                      { \$257 , \$signal$63$next  } = \$255 ;
                  5'h15:
                      { \$260 , \$signal$64$next  } = \$258 ;
                  5'h16:
                      { \$263 , \$signal$65$next  } = \$261 ;
                  5'h17:
                      { \$266 , \$signal$66$next  } = \$264 ;
                  5'h18:
                      { \$269 , \$signal$67$next  } = \$267 ;
                  5'h19:
                      { \$272 , \$signal$68$next  } = \$270 ;
                  5'h1a:
                      { \$275 , \$signal$69$next  } = \$273 ;
                  5'h1b:
                      { \$278 , \$signal$70$next  } = \$276 ;
                  5'h1c:
                      { \$281 , \$signal$71$next  } = \$279 ;
                  5'h1d:
                      { \$284 , \$signal$72$next  } = \$282 ;
                  5'h1e:
                      { \$287 , \$signal$next  } = \$285 ;
                  5'hzz:
                      { \$290 , \$signal$73$next  } = \$288 ;
                endcase
            /* src = "/tmp/chipcron/all_stages/reg_file.py:84" */
            default:
                { \$291 , \$signal$43$next  } = 33'h000000000;
          endcase
      /* src = "/tmp/chipcron/all_stages/reg_file.py:87" */
      default:
          { \$292 , \$signal$43$next  } = 33'h000000000;
    endcase
    (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/xfrm.py:530" *)
    casez (neg_rst)
      1'h1:
        begin
          \$signal$43$next  = 32'd0;
          \$signal$44$next  = 32'd0;
          \$signal$45$next  = 32'd0;
          \$signal$46$next  = 32'd0;
          \$signal$47$next  = 32'd0;
          \$signal$48$next  = 32'd0;
          \$signal$49$next  = 32'd0;
          \$signal$50$next  = 32'd0;
          \$signal$51$next  = 32'd0;
          \$signal$52$next  = 32'd0;
          \$signal$53$next  = 32'd0;
          \$signal$54$next  = 32'd0;
          \$signal$55$next  = 32'd0;
          \$signal$56$next  = 32'd0;
          \$signal$57$next  = 32'd0;
          \$signal$58$next  = 32'd0;
          \$signal$59$next  = 32'd0;
          \$signal$60$next  = 32'd0;
          \$signal$61$next  = 32'd0;
          \$signal$62$next  = 32'd0;
          \$signal$63$next  = 32'd0;
          \$signal$64$next  = 32'd0;
          \$signal$65$next  = 32'd0;
          \$signal$66$next  = 32'd0;
          \$signal$67$next  = 32'd0;
          \$signal$68$next  = 32'd0;
          \$signal$69$next  = 32'd0;
          \$signal$70$next  = 32'd0;
          \$signal$71$next  = 32'd0;
          \$signal$72$next  = 32'd0;
          \$signal$next  = 32'd0;
          \$signal$73$next  = 32'd0;
        end
    endcase
  end
  always @* begin
    write_Rs1_data = 32'd0;
    (* src = "/tmp/chipcron/all_stages/reg_file.py:66" *)
    casez (load_Rs1_addr)
      5'h00:
          write_Rs1_data = \$294 [31:0];
      5'h01:
          write_Rs1_data = \$297 [31:0];
      5'h02:
          write_Rs1_data = \$300 [31:0];
      5'h03:
          write_Rs1_data = \$303 [31:0];
      5'h04:
          write_Rs1_data = \$306 [31:0];
      5'h05:
          write_Rs1_data = \$309 [31:0];
      5'h06:
          write_Rs1_data = \$312 [31:0];
      5'h07:
          write_Rs1_data = \$315 [31:0];
      5'h08:
          write_Rs1_data = \$318 [31:0];
      5'h09:
          write_Rs1_data = \$321 [31:0];
      5'h0a:
          write_Rs1_data = \$324 [31:0];
      5'h0b:
          write_Rs1_data = \$327 [31:0];
      5'h0c:
          write_Rs1_data = \$330 [31:0];
      5'h0d:
          write_Rs1_data = \$333 [31:0];
      5'h0e:
          write_Rs1_data = \$336 [31:0];
      5'h0f:
          write_Rs1_data = \$339 [31:0];
      5'h10:
          write_Rs1_data = \$342 [31:0];
      5'h11:
          write_Rs1_data = \$345 [31:0];
      5'h12:
          write_Rs1_data = \$348 [31:0];
      5'h13:
          write_Rs1_data = \$351 [31:0];
      5'h14:
          write_Rs1_data = \$354 [31:0];
      5'h15:
          write_Rs1_data = \$357 [31:0];
      5'h16:
          write_Rs1_data = \$360 [31:0];
      5'h17:
          write_Rs1_data = \$363 [31:0];
      5'h18:
          write_Rs1_data = \$366 [31:0];
      5'h19:
          write_Rs1_data = \$369 [31:0];
      5'h1a:
          write_Rs1_data = \$372 [31:0];
      5'h1b:
          write_Rs1_data = \$375 [31:0];
      5'h1c:
          write_Rs1_data = \$378 [31:0];
      5'h1d:
          write_Rs1_data = \$381 [31:0];
      5'h1e:
          write_Rs1_data = \$384 [31:0];
      5'hzz:
          write_Rs1_data = \$387 [31:0];
    endcase
  end
  always @* begin
    write_Rs2_data = 32'd0;
    (* src = "/tmp/chipcron/all_stages/reg_file.py:67" *)
    casez (load_Rs2_addr)
      5'h00:
          write_Rs2_data = \$391 [31:0];
      5'h01:
          write_Rs2_data = \$394 [31:0];
      5'h02:
          write_Rs2_data = \$397 [31:0];
      5'h03:
          write_Rs2_data = \$400 [31:0];
      5'h04:
          write_Rs2_data = \$403 [31:0];
      5'h05:
          write_Rs2_data = \$406 [31:0];
      5'h06:
          write_Rs2_data = \$409 [31:0];
      5'h07:
          write_Rs2_data = \$412 [31:0];
      5'h08:
          write_Rs2_data = \$415 [31:0];
      5'h09:
          write_Rs2_data = \$418 [31:0];
      5'h0a:
          write_Rs2_data = \$421 [31:0];
      5'h0b:
          write_Rs2_data = \$424 [31:0];
      5'h0c:
          write_Rs2_data = \$427 [31:0];
      5'h0d:
          write_Rs2_data = \$430 [31:0];
      5'h0e:
          write_Rs2_data = \$433 [31:0];
      5'h0f:
          write_Rs2_data = \$436 [31:0];
      5'h10:
          write_Rs2_data = \$439 [31:0];
      5'h11:
          write_Rs2_data = \$442 [31:0];
      5'h12:
          write_Rs2_data = \$445 [31:0];
      5'h13:
          write_Rs2_data = \$448 [31:0];
      5'h14:
          write_Rs2_data = \$451 [31:0];
      5'h15:
          write_Rs2_data = \$454 [31:0];
      5'h16:
          write_Rs2_data = \$457 [31:0];
      5'h17:
          write_Rs2_data = \$460 [31:0];
      5'h18:
          write_Rs2_data = \$463 [31:0];
      5'h19:
          write_Rs2_data = \$466 [31:0];
      5'h1a:
          write_Rs2_data = \$469 [31:0];
      5'h1b:
          write_Rs2_data = \$472 [31:0];
      5'h1c:
          write_Rs2_data = \$475 [31:0];
      5'h1d:
          write_Rs2_data = \$478 [31:0];
      5'h1e:
          write_Rs2_data = \$481 [31:0];
      5'hzz:
          write_Rs2_data = \$484 [31:0];
    endcase
  end
  assign \$294  = \$295 ;
  assign \$297  = \$298 ;
  assign \$300  = \$301 ;
  assign \$303  = \$304 ;
  assign \$306  = \$307 ;
  assign \$309  = \$310 ;
  assign \$312  = \$313 ;
  assign \$315  = \$316 ;
  assign \$318  = \$319 ;
  assign \$321  = \$322 ;
  assign \$324  = \$325 ;
  assign \$327  = \$328 ;
  assign \$330  = \$331 ;
  assign \$333  = \$334 ;
  assign \$336  = \$337 ;
  assign \$339  = \$340 ;
  assign \$342  = \$343 ;
  assign \$345  = \$346 ;
  assign \$348  = \$349 ;
  assign \$351  = \$352 ;
  assign \$354  = \$355 ;
  assign \$357  = \$358 ;
  assign \$360  = \$361 ;
  assign \$363  = \$364 ;
  assign \$366  = \$367 ;
  assign \$369  = \$370 ;
  assign \$372  = \$373 ;
  assign \$375  = \$376 ;
  assign \$378  = \$379 ;
  assign \$381  = \$382 ;
  assign \$384  = \$385 ;
  assign \$387  = \$388 ;
  assign \$391  = \$392 ;
  assign \$394  = \$395 ;
  assign \$397  = \$398 ;
  assign \$400  = \$401 ;
  assign \$403  = \$404 ;
  assign \$406  = \$407 ;
  assign \$409  = \$410 ;
  assign \$412  = \$413 ;
  assign \$415  = \$416 ;
  assign \$418  = \$419 ;
  assign \$421  = \$422 ;
  assign \$424  = \$425 ;
  assign \$427  = \$428 ;
  assign \$430  = \$431 ;
  assign \$433  = \$434 ;
  assign \$436  = \$437 ;
  assign \$439  = \$440 ;
  assign \$442  = \$443 ;
  assign \$445  = \$446 ;
  assign \$448  = \$449 ;
  assign \$451  = \$452 ;
  assign \$454  = \$455 ;
  assign \$457  = \$458 ;
  assign \$460  = \$461 ;
  assign \$463  = \$464 ;
  assign \$466  = \$467 ;
  assign \$469  = \$470 ;
  assign \$472  = \$473 ;
  assign \$475  = \$476 ;
  assign \$478  = \$479 ;
  assign \$481  = \$482 ;
  assign \$484  = \$485 ;
endmodule

(* generator = "nMigen" *)
(* \nmigen.hierarchy  = "top.stall_unit" *)
module stall_unit(csb0, web0, ID_src1, ID_src2, next_dest0, stall);
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" *)
  wire \$1 ;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:27" *)
  wire \$11 ;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:33" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:26" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:32" *)
  wire \$9 ;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:15" *)
  input [4:0] ID_src1;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:16" *)
  input [4:0] ID_src2;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:13" *)
  input csb0;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:17" *)
  input [4:0] next_dest0;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:19" *)
  output stall;
  reg stall;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:14" *)
  input web0;
  assign \$9  = ID_src2 == (* src = "/tmp/chipcron/all_stages/Stall_unit.py:32" *) next_dest0;
  assign \$11  = ID_src1 != (* src = "/tmp/chipcron/all_stages/Stall_unit.py:27" *) 1'h0;
  assign \$13  = ID_src2 != (* src = "/tmp/chipcron/all_stages/Stall_unit.py:33" *) 1'h0;
  assign \$1  = csb0 == (* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" *) 1'h0;
  assign \$3  = web0 == (* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" *) 1'h1;
  assign \$5  = \$1  & (* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" *) \$3 ;
  assign \$7  = ID_src1 == (* src = "/tmp/chipcron/all_stages/Stall_unit.py:26" *) next_dest0;
  always @* begin
    stall = 1'h0;
    (* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" *)
    casez (\$5 )
      /* src = "/tmp/chipcron/all_stages/Stall_unit.py:25" */
      1'h1:
          (* src = "/tmp/chipcron/all_stages/Stall_unit.py:26" *)
          casez ({ \$9 , \$7  })
            /* src = "/tmp/chipcron/all_stages/Stall_unit.py:26" */
            2'bz1:
                (* src = "/tmp/chipcron/all_stages/Stall_unit.py:27" *)
                casez (\$11 )
                  /* src = "/tmp/chipcron/all_stages/Stall_unit.py:27" */
                  1'h1:
                      stall = 1'h1;
                  /* src = "/tmp/chipcron/all_stages/Stall_unit.py:29" */
                  default:
                      stall = 1'h0;
                endcase
            /* src = "/tmp/chipcron/all_stages/Stall_unit.py:32" */
            2'b1z:
                (* src = "/tmp/chipcron/all_stages/Stall_unit.py:33" *)
                casez (\$13 )
                  /* src = "/tmp/chipcron/all_stages/Stall_unit.py:33" */
                  1'h1:
                      stall = 1'h1;
                  /* src = "/tmp/chipcron/all_stages/Stall_unit.py:35" */
                  default:
                      stall = 1'h0;
                endcase
            /* src = "/tmp/chipcron/all_stages/Stall_unit.py:38" */
            default:
                stall = 1'h0;
          endcase
      /* src = "/tmp/chipcron/all_stages/Stall_unit.py:41" */
      default:
          stall = 1'h0;
    endcase
  end
endmodule

(* generator = "nMigen" *)
(* top =  1  *)
(* \nmigen.hierarchy  = "top" *)
module top(csb_alu, csb_mem, web, wmask, alu_result, gpio_pins, output_pins, inst_mem_addr, inst_mem_rdata, data_mem_addr, data_mem_wdata, data_mem_rdata, clk, rst, neg_clk, neg_rst, read_flag);
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$1 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$101 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$103 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$105 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$107 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$109 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$11 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$111 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$113 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$115 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$117 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$119 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$121 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$123 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$125 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$127 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$129 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$13 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$131 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$133 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$135 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$137 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$139 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$141 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$143 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$145 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$147 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$149 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$15 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$151 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$153 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$155 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$157 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$159 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$161 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$163 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$165 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$167 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$169 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$17 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$171 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$173 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$175 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$177 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$179 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$181 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$183 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$185 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$187 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$189 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$19 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$191 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$193 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$195 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$197 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$199 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$201 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$203 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$205 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$207 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$209 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$21 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$211 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$213 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$215 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$217 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$219 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$221 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$23 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$25 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$27 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$29 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$3 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$31 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$33 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$35 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$37 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$39 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$41 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$43 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$45 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$47 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$49 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$5 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$51 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$53 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$55 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$57 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$59 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$61 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$63 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$65 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
  wire \$67 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$69 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
  wire \$7 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$71 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$73 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$75 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$77 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$79 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$81 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$83 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$85 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$87 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$89 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$9 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$91 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$93 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$95 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$97 ;
  (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
  wire \$99 ;
  (* src = "/tmp/chipcron/all_stages/alu.py:13" *)
  reg [31:0] ALU_Ra;
  (* src = "/tmp/chipcron/all_stages/alu.py:14" *)
  reg [31:0] ALU_Rb;
  (* src = "/tmp/chipcron/all_stages/alu.py:24" *)
  wire ALU_branching;
  (* src = "/tmp/chipcron/all_stages/alu.py:35" *)
  wire ALU_csb;
  (* src = "/tmp/chipcron/all_stages/alu.py:23" *)
  reg [31:0] ALU_immediate;
  (* src = "/tmp/chipcron/all_stages/alu.py:17" *)
  reg [2:0] ALU_inst_type;
  (* src = "/tmp/chipcron/all_stages/alu.py:19" *)
  reg [10:0] ALU_inst_type1;
  (* src = "/tmp/chipcron/all_stages/alu.py:20" *)
  reg [10:0] ALU_inst_type2;
  (* src = "/tmp/chipcron/all_stages/alu.py:21" *)
  reg [6:0] ALU_inst_type3;
  (* src = "/tmp/chipcron/all_stages/alu.py:31" *)
  wire ALU_jump;
  (* src = "/tmp/chipcron/all_stages/alu.py:39" *)
  wire ALU_load_wb;
  (* src = "/tmp/chipcron/all_stages/alu.py:32" *)
  reg [7:0] ALU_pc;
  (* src = "/tmp/chipcron/all_stages/alu.py:22" *)
  reg [4:0] ALU_reg_addr_in;
  (* src = "/tmp/chipcron/all_stages/alu.py:30" *)
  wire [4:0] ALU_reg_addr_out;
  (* src = "/tmp/chipcron/all_stages/alu.py:15" *)
  wire [31:0] ALU_result;
  (* src = "/tmp/chipcron/all_stages/alu.py:33" *)
  reg [4:0] ALU_shamt;
  (* src = "/tmp/chipcron/all_stages/alu.py:36" *)
  wire ALU_web;
  (* src = "/tmp/chipcron/all_stages/alu.py:40" *)
  wire [3:0] ALU_wmask;
  (* src = "/tmp/chipcron/all_stages/id.py:17" *)
  wire [4:0] ID_des;
  (* src = "/tmp/chipcron/all_stages/id.py:28" *)
  wire ID_ifload;
  (* src = "/tmp/chipcron/all_stages/id.py:11" *)
  reg [31:0] ID_instruction;
  (* src = "/tmp/chipcron/all_stages/id.py:23" *)
  wire [2:0] ID_instruction_type;
  (* src = "/tmp/chipcron/all_stages/id.py:24" *)
  wire [16:0] ID_it0;
  (* src = "/tmp/chipcron/all_stages/id.py:25" *)
  wire [10:0] ID_it1;
  (* src = "/tmp/chipcron/all_stages/id.py:26" *)
  wire [10:0] ID_it2;
  (* src = "/tmp/chipcron/all_stages/id.py:27" *)
  wire [6:0] ID_it3;
  (* src = "/tmp/chipcron/all_stages/id.py:18" *)
  wire [4:0] ID_s1;
  (* src = "/tmp/chipcron/all_stages/id.py:12" *)
  reg [31:0] ID_s1_data_in;
  (* src = "/tmp/chipcron/all_stages/id.py:20" *)
  wire [31:0] ID_s1data_out;
  (* src = "/tmp/chipcron/all_stages/id.py:19" *)
  wire [4:0] ID_s2;
  (* src = "/tmp/chipcron/all_stages/id.py:13" *)
  reg [31:0] ID_s2_data_in;
  (* src = "/tmp/chipcron/all_stages/id.py:21" *)
  wire [31:0] ID_s2data_out;
  (* src = "/tmp/chipcron/all_stages/id.py:29" *)
  wire [4:0] ID_shamt;
  (* src = "/tmp/chipcron/all_stages/id.py:22" *)
  wire [31:0] ID_signextended_immediate;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:15" *)
  reg [31:0] IF_ID_pipeline_IF2_out;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:21" *)
  reg IF_ID_pipeline_branch;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:18" *)
  wire [31:0] IF_ID_pipeline_inst_out;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:22" *)
  reg IF_ID_pipeline_jump;
  (* src = "/tmp/chipcron/all_stages/IF_ID_pipeline.py:20" *)
  reg IF_ID_pipeline_stall;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:26" *)
  reg M1_M2_pipeline_csb_in;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:27" *)
  wire M1_M2_pipeline_csb_out;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:16" *)
  reg [4:0] M1_M2_pipeline_memory_reg_addr_out_out;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:17" *)
  wire [4:0] M1_M2_pipeline_reg_file_write_addr_in;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:14" *)
  reg M1_M2_pipeline_reg_file_write_in;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:15" *)
  wire M1_M2_pipeline_reg_file_write_out;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:21" *)
  reg [4:0] M1_M2_pipeline_s1_in;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:23" *)
  wire [4:0] M1_M2_pipeline_s1_out;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:22" *)
  reg [4:0] M1_M2_pipeline_s2_in;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:24" *)
  wire [4:0] M1_M2_pipeline_s2_out;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:28" *)
  reg M1_M2_pipeline_web_in;
  (* src = "/tmp/chipcron/all_stages/M1_M2_pipeline.py:29" *)
  wire M1_M2_pipeline_web_out;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:26" *)
  reg M2_WB_pipeline_csb_in;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:27" *)
  wire M2_WB_pipeline_csb_out;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:18" *)
  reg [31:0] M2_WB_pipeline_memory_data_out_out;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:16" *)
  reg [4:0] M2_WB_pipeline_memory_reg_addr_out_out;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:17" *)
  wire [4:0] M2_WB_pipeline_reg_file_write_addr_in;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:19" *)
  wire [31:0] M2_WB_pipeline_reg_file_write_data_in;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:14" *)
  reg M2_WB_pipeline_reg_file_write_in;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:15" *)
  wire M2_WB_pipeline_reg_file_write_out;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:21" *)
  reg [4:0] M2_WB_pipeline_s1_in;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:22" *)
  reg [4:0] M2_WB_pipeline_s2_in;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:28" *)
  reg M2_WB_pipeline_web_in;
  (* src = "/tmp/chipcron/all_stages/M2_WB_pipeline.py:29" *)
  wire M2_WB_pipeline_web_out;
  (* src = "/tmp/chipcron/Wrapper_class.py:37" *)
  output [31:0] alu_result;
  reg [31:0] alu_result;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/tmp/chipcron/Wrapper_class.py:31" *)
  output csb_alu;
  reg csb_alu;
  (* src = "/tmp/chipcron/Wrapper_class.py:32" *)
  output csb_mem;
  reg csb_mem;
  (* src = "/tmp/chipcron/Wrapper_class.py:35" *)
  output [7:0] data_mem_addr;
  reg [7:0] data_mem_addr;
  (* src = "/tmp/chipcron/Wrapper_class.py:36" *)
  input [31:0] data_mem_rdata;
  (* src = "/tmp/chipcron/Wrapper_class.py:34" *)
  output [31:0] data_mem_wdata;
  reg [31:0] data_mem_wdata;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:20" *)
  reg forwarding_alu_csb0;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:18" *)
  reg [4:0] forwarding_alu_des0;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:24" *)
  wire [31:0] forwarding_alu_ra;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:25" *)
  wire [31:0] forwarding_alu_rb;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:15" *)
  reg [4:0] forwarding_alu_s1;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:13" *)
  reg [31:0] forwarding_alu_s1_data;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:16" *)
  reg [4:0] forwarding_alu_s2;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:14" *)
  reg [31:0] forwarding_alu_s2_data;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:19" *)
  reg [31:0] forwarding_alu_val0;
  (* src = "/tmp/chipcron/all_stages/forward_alu.py:21" *)
  reg forwarding_alu_web0;
  (* src = "/tmp/chipcron/Wrapper_class.py:38" *)
  output [31:0] gpio_pins;
  reg [31:0] gpio_pins;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:30" *)
  wire [4:0] id_mux_des;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:13" *)
  reg [4:0] id_mux_des_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:24" *)
  reg id_mux_ifload_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:36" *)
  wire [2:0] id_mux_instruction_type;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:19" *)
  reg [2:0] id_mux_instruction_type_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:37" *)
  wire [16:0] id_mux_it0;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:20" *)
  reg [16:0] id_mux_it0_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:38" *)
  wire [10:0] id_mux_it1;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:21" *)
  reg [10:0] id_mux_it1_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:39" *)
  wire [10:0] id_mux_it2;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:22" *)
  reg [10:0] id_mux_it2_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:40" *)
  wire [6:0] id_mux_it3;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:23" *)
  reg [6:0] id_mux_it3_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:31" *)
  wire [4:0] id_mux_s1;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:14" *)
  reg [4:0] id_mux_s1_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:33" *)
  wire [31:0] id_mux_s1data_out;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:16" *)
  reg [31:0] id_mux_s1data_out_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:32" *)
  wire [4:0] id_mux_s2;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:15" *)
  reg [4:0] id_mux_s2_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:34" *)
  wire [31:0] id_mux_s2data_out;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:17" *)
  reg [31:0] id_mux_s2data_out_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:42" *)
  wire [4:0] id_mux_shamt;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:25" *)
  reg [4:0] id_mux_shamt_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:35" *)
  wire [31:0] id_mux_signextended_immediate;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:18" *)
  reg [31:0] id_mux_signextended_immediate_id;
  (* src = "/tmp/chipcron/all_stages/id_mux.py:27" *)
  reg id_mux_stall;
  (* src = "/tmp/chipcron/Wrapper_class.py:28" *)
  output [7:0] inst_mem_addr;
  reg [7:0] inst_mem_addr;
  (* src = "/tmp/chipcron/Wrapper_class.py:29" *)
  input [31:0] inst_mem_rdata;
  (* src = "/tmp/chipcron/all_stages/alu.py:18" *)
  reg [16:0] inst_type0;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input neg_clk;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input neg_rst;
  (* src = "/tmp/chipcron/Wrapper_class.py:39" *)
  input [31:0] output_pins;
  (* src = "/tmp/chipcron/Wrapper_class.py:26" *)
  reg [7:0] pc;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:14" *)
  reg pc_controller_branch;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:16" *)
  reg [31:0] pc_controller_immediate;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:15" *)
  reg pc_controller_jump;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:23" *)
  wire [7:0] pc_controller_pc;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:18" *)
  reg [7:0] pc_controller_pc_in;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:17" *)
  reg [31:0] pc_controller_ra;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:20" *)
  reg pc_controller_read_flag;
  (* src = "/tmp/chipcron/all_stages/pc_controller.py:13" *)
  reg pc_controller_stall;
  (* src = "/tmp/chipcron/Wrapper_class.py:27" *)
  input read_flag;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:49" *)
  wire [31:0] \reg_file_$signal ;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:33" *)
  reg reg_file_csb_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:39" *)
  reg reg_file_csb_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:42" *)
  reg [31:0] reg_file_gpio_input;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:26" *)
  reg [4:0] reg_file_load_Rs1_addr;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:27" *)
  reg [4:0] reg_file_load_Rs2_addr;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:28" *)
  reg [7:0] reg_file_pc;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:40" *)
  reg reg_file_web_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:45" *)
  wire [31:0] reg_file_write_Rs1_data;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:46" *)
  wire [31:0] reg_file_write_Rs2_data;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:31" *)
  reg [4:0] reg_file_write_addr_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:37" *)
  reg [4:0] reg_file_write_addr_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:30" *)
  reg reg_file_write_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:32" *)
  reg [31:0] reg_file_write_data_alu;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:38" *)
  reg [31:0] reg_file_write_data_mem;
  (* src = "/tmp/chipcron/all_stages/reg_file.py:36" *)
  reg reg_file_write_mem;
  (* src = "/usr/local/lib/python3.10/dist-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/tmp/chipcron/all_stages/alu.py:41" *)
  reg [4:0] s1;
  (* src = "/tmp/chipcron/all_stages/alu.py:42" *)
  reg [4:0] s2;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:15" *)
  reg [4:0] stall_unit_ID_src1;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:16" *)
  reg [4:0] stall_unit_ID_src2;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:13" *)
  reg stall_unit_csb0;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:17" *)
  reg [4:0] stall_unit_next_dest0;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:19" *)
  wire stall_unit_stall;
  (* src = "/tmp/chipcron/all_stages/Stall_unit.py:14" *)
  reg stall_unit_web0;
  (* src = "/tmp/chipcron/Wrapper_class.py:33" *)
  output web;
  reg web;
  (* src = "/tmp/chipcron/Wrapper_class.py:30" *)
  output [3:0] wmask;
  reg [3:0] wmask;
  assign \$9  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$99  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$101  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$103  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$105  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$107  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$109  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$111  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$113  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$115  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$117  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$11  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$119  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$121  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$123  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$125  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$127  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$129  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$131  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$133  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$135  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$137  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$13  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$139  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$141  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$143  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$145  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$147  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$149  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$151  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$153  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$155  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$157  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$15  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$159  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$161  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$163  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$165  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$167  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$169  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$171  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$173  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$175  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$177  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$17  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$179  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$181  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$183  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$185  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$187  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$189  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$191  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$193  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$195  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$197  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$1  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$19  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$199  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$201  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$203  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$205  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$207  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$209  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$211  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$213  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$215  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$217  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$21  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$219  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$221  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$23  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$25  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$27  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$29  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$31  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$33  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$35  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$37  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$3  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$39  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$41  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$43  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$45  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$47  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$49  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$51  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$53  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$55  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$57  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$5  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$59  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$61  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$63  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$65  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$67  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:72" *) 3'h7;
  assign \$69  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$71  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$73  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$75  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$77  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$7  = pc < (* src = "/tmp/chipcron/Wrapper_class.py:74" *) 3'h5;
  assign \$79  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$81  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$83  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$85  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$87  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$89  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$91  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$93  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$95  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  assign \$97  = read_flag == (* src = "/tmp/chipcron/Wrapper_class.py:67" *) 1'h0;
  ALU ALU (
    .Ra(ALU_Ra),
    .Rb(ALU_Rb),
    .branching(ALU_branching),
    .csb(ALU_csb),
    .immediate(ALU_immediate),
    .inst_type(ALU_inst_type),
    .inst_type1(ALU_inst_type1),
    .inst_type2(ALU_inst_type2),
    .inst_type3(ALU_inst_type3),
    .jump(ALU_jump),
    .load_wb(ALU_load_wb),
    .pc(ALU_pc),
    .reg_addr_in(ALU_reg_addr_in),
    .reg_addr_out(ALU_reg_addr_out),
    .result(ALU_result),
    .shamt(ALU_shamt),
    .web(ALU_web),
    .wmask(ALU_wmask)
  );
  ID ID (
    .des(ID_des),
    .ifload(ID_ifload),
    .instruction(ID_instruction),
    .instruction_type(ID_instruction_type),
    .it0(ID_it0),
    .it1(ID_it1),
    .it2(ID_it2),
    .it3(ID_it3),
    .s1(ID_s1),
    .s1_data_in(ID_s1_data_in),
    .s1data_out(ID_s1data_out),
    .s2(ID_s2),
    .s2_data_in(ID_s2_data_in),
    .s2data_out(ID_s2data_out),
    .shamt(ID_shamt),
    .signextended_immediate(ID_signextended_immediate)
  );
  IF_ID_pipeline IF_ID_pipeline (
    .IF2_out(IF_ID_pipeline_IF2_out),
    .branch(IF_ID_pipeline_branch),
    .clk(clk),
    .inst_out(IF_ID_pipeline_inst_out),
    .jump(IF_ID_pipeline_jump),
    .rst(rst),
    .stall(IF_ID_pipeline_stall)
  );
  M1_M2_pipeline M1_M2_pipeline (
    .clk(clk),
    .csb_in(M1_M2_pipeline_csb_in),
    .csb_out(M1_M2_pipeline_csb_out),
    .memory_reg_addr_out_out(M1_M2_pipeline_memory_reg_addr_out_out),
    .reg_file_write_addr_in(M1_M2_pipeline_reg_file_write_addr_in),
    .reg_file_write_in(M1_M2_pipeline_reg_file_write_in),
    .reg_file_write_out(M1_M2_pipeline_reg_file_write_out),
    .rst(rst),
    .s1_in(M1_M2_pipeline_s1_in),
    .s1_out(M1_M2_pipeline_s1_out),
    .s2_in(M1_M2_pipeline_s2_in),
    .s2_out(M1_M2_pipeline_s2_out),
    .web_in(M1_M2_pipeline_web_in),
    .web_out(M1_M2_pipeline_web_out)
  );
  M2_WB_pipeline M2_WB_pipeline (
    .clk(clk),
    .csb_in(M2_WB_pipeline_csb_in),
    .csb_out(M2_WB_pipeline_csb_out),
    .memory_data_out_out(M2_WB_pipeline_memory_data_out_out),
    .memory_reg_addr_out_out(M2_WB_pipeline_memory_reg_addr_out_out),
    .reg_file_write_addr_in(M2_WB_pipeline_reg_file_write_addr_in),
    .reg_file_write_data_in(M2_WB_pipeline_reg_file_write_data_in),
    .reg_file_write_in(M2_WB_pipeline_reg_file_write_in),
    .reg_file_write_out(M2_WB_pipeline_reg_file_write_out),
    .rst(rst),
    .s1_in(M2_WB_pipeline_s1_in),
    .s2_in(M2_WB_pipeline_s2_in),
    .web_in(M2_WB_pipeline_web_in),
    .web_out(M2_WB_pipeline_web_out)
  );
  forwarding_alu forwarding_alu (
    .csb0(forwarding_alu_csb0),
    .des0(forwarding_alu_des0),
    .ra(forwarding_alu_ra),
    .rb(forwarding_alu_rb),
    .s1(forwarding_alu_s1),
    .s1_data(forwarding_alu_s1_data),
    .s2(forwarding_alu_s2),
    .s2_data(forwarding_alu_s2_data),
    .val0(forwarding_alu_val0),
    .web0(forwarding_alu_web0)
  );
  id_mux id_mux (
    .des(id_mux_des),
    .des_id(id_mux_des_id),
    .ifload_id(id_mux_ifload_id),
    .instruction_type(id_mux_instruction_type),
    .instruction_type_id(id_mux_instruction_type_id),
    .it0(id_mux_it0),
    .it0_id(id_mux_it0_id),
    .it1(id_mux_it1),
    .it1_id(id_mux_it1_id),
    .it2(id_mux_it2),
    .it2_id(id_mux_it2_id),
    .it3(id_mux_it3),
    .it3_id(id_mux_it3_id),
    .s1(id_mux_s1),
    .s1_id(id_mux_s1_id),
    .s1data_out(id_mux_s1data_out),
    .s1data_out_id(id_mux_s1data_out_id),
    .s2(id_mux_s2),
    .s2_id(id_mux_s2_id),
    .s2data_out(id_mux_s2data_out),
    .s2data_out_id(id_mux_s2data_out_id),
    .shamt(id_mux_shamt),
    .shamt_id(id_mux_shamt_id),
    .signextended_immediate(id_mux_signextended_immediate),
    .signextended_immediate_id(id_mux_signextended_immediate_id),
    .stall(id_mux_stall)
  );
  pc_controller pc_controller (
    .branch(pc_controller_branch),
    .clk(clk),
    .immediate(pc_controller_immediate),
    .jump(pc_controller_jump),
    .pc(pc_controller_pc),
    .pc_in(pc_controller_pc_in),
    .ra(pc_controller_ra),
    .read_flag(pc_controller_read_flag),
    .rst(rst),
    .stall(pc_controller_stall)
  );
  reg_file reg_file (
    .\$signal (\reg_file_$signal ),
    .csb_alu(reg_file_csb_alu),
    .csb_mem(reg_file_csb_mem),
    .gpio_input(reg_file_gpio_input),
    .load_Rs1_addr(reg_file_load_Rs1_addr),
    .load_Rs2_addr(reg_file_load_Rs2_addr),
    .neg_clk(neg_clk),
    .neg_rst(neg_rst),
    .pc(reg_file_pc),
    .web_mem(reg_file_web_mem),
    .write_Rs1_data(reg_file_write_Rs1_data),
    .write_Rs2_data(reg_file_write_Rs2_data),
    .write_addr_alu(reg_file_write_addr_alu),
    .write_addr_mem(reg_file_write_addr_mem),
    .write_alu(reg_file_write_alu),
    .write_data_alu(reg_file_write_data_alu),
    .write_data_mem(reg_file_write_data_mem),
    .write_mem(reg_file_write_mem)
  );
  stall_unit stall_unit (
    .ID_src1(stall_unit_ID_src1),
    .ID_src2(stall_unit_ID_src2),
    .csb0(stall_unit_csb0),
    .next_dest0(stall_unit_next_dest0),
    .stall(stall_unit_stall),
    .web0(stall_unit_web0)
  );
  always @* begin
    pc = 8'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$1 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          pc = 8'h00;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          pc = pc_controller_pc;
    endcase
  end
  always @* begin
    reg_file_csb_alu = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$3 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$5 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$7 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      reg_file_csb_alu = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      reg_file_csb_alu = ALU_csb;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                reg_file_csb_alu = ALU_csb;
          endcase
    endcase
  end
  always @* begin
    reg_file_csb_mem = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$57 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$59 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                reg_file_csb_mem = 1'h0;
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                reg_file_csb_mem = M2_WB_pipeline_csb_out;
          endcase
    endcase
  end
  always @* begin
    reg_file_web_mem = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$61 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$63 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                reg_file_web_mem = 1'h0;
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                reg_file_web_mem = M2_WB_pipeline_web_out;
          endcase
    endcase
  end
  always @* begin
    reg_file_write_mem = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$65 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$67 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                reg_file_write_mem = 1'h0;
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                reg_file_write_mem = M2_WB_pipeline_reg_file_write_out;
          endcase
    endcase
  end
  always @* begin
    inst_mem_addr = 8'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$69 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          inst_mem_addr = pc;
    endcase
  end
  always @* begin
    IF_ID_pipeline_IF2_out = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$71 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          IF_ID_pipeline_IF2_out = inst_mem_rdata;
    endcase
  end
  always @* begin
    ID_instruction = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$73 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ID_instruction = IF_ID_pipeline_inst_out;
    endcase
  end
  always @* begin
    stall_unit_csb0 = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$75 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          stall_unit_csb0 = M1_M2_pipeline_csb_out;
    endcase
  end
  always @* begin
    stall_unit_web0 = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$77 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          stall_unit_web0 = M1_M2_pipeline_web_out;
    endcase
  end
  always @* begin
    stall_unit_ID_src1 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$79 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          stall_unit_ID_src1 = ID_s1;
    endcase
  end
  always @* begin
    stall_unit_ID_src2 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$81 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          stall_unit_ID_src2 = ID_s2;
    endcase
  end
  always @* begin
    reg_file_write_alu = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$9 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$11 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$13 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      reg_file_write_alu = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      reg_file_write_alu = ALU_load_wb;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                reg_file_write_alu = ALU_load_wb;
          endcase
    endcase
  end
  always @* begin
    stall_unit_next_dest0 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$83 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          stall_unit_next_dest0 = M1_M2_pipeline_reg_file_write_addr_in;
    endcase
  end
  always @* begin
    pc_controller_pc_in = 8'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$85 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          pc_controller_pc_in = pc;
    endcase
  end
  always @* begin
    pc_controller_ra = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$87 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          pc_controller_ra = ALU_Ra;
    endcase
  end
  always @* begin
    pc_controller_immediate = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$89 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          pc_controller_immediate = ALU_immediate;
    endcase
  end
  always @* begin
    pc_controller_read_flag = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$91 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          pc_controller_read_flag = read_flag;
    endcase
  end
  always @* begin
    reg_file_pc = 8'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$93 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_pc = pc;
    endcase
  end
  always @* begin
    reg_file_load_Rs1_addr = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$95 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_load_Rs1_addr = ID_s1;
    endcase
  end
  always @* begin
    reg_file_load_Rs2_addr = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$97 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_load_Rs2_addr = ID_s2;
    endcase
  end
  always @* begin
    ID_s1_data_in = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$99 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ID_s1_data_in = reg_file_write_Rs1_data;
    endcase
  end
  always @* begin
    ID_s2_data_in = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$101 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ID_s2_data_in = reg_file_write_Rs2_data;
    endcase
  end
  always @* begin
    IF_ID_pipeline_branch = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$15 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$17 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$19 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      IF_ID_pipeline_branch = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      IF_ID_pipeline_branch = ALU_branching;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                IF_ID_pipeline_branch = ALU_branching;
          endcase
    endcase
  end
  always @* begin
    id_mux_des_id = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$103 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_des_id = ID_des;
    endcase
  end
  always @* begin
    id_mux_s1_id = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$105 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_s1_id = ID_s1;
    endcase
  end
  always @* begin
    id_mux_s2_id = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$107 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_s2_id = ID_s2;
    endcase
  end
  always @* begin
    id_mux_s1data_out_id = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$109 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_s1data_out_id = ID_s1data_out;
    endcase
  end
  always @* begin
    id_mux_s2data_out_id = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$111 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_s2data_out_id = ID_s2data_out;
    endcase
  end
  always @* begin
    id_mux_signextended_immediate_id = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$113 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_signextended_immediate_id = ID_signextended_immediate;
    endcase
  end
  always @* begin
    id_mux_instruction_type_id = 3'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$115 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_instruction_type_id = ID_instruction_type;
    endcase
  end
  always @* begin
    id_mux_it0_id = 17'h00000;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$117 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_it0_id = ID_it0;
    endcase
  end
  always @* begin
    id_mux_it1_id = 11'h000;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$119 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_it1_id = ID_it1;
    endcase
  end
  always @* begin
    id_mux_it2_id = 11'h000;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$121 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_it2_id = ID_it2;
    endcase
  end
  always @* begin
    IF_ID_pipeline_jump = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$21 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$23 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$25 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      IF_ID_pipeline_jump = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      IF_ID_pipeline_jump = ALU_jump;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                IF_ID_pipeline_jump = ALU_jump;
          endcase
    endcase
  end
  always @* begin
    id_mux_it3_id = 7'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$123 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_it3_id = ID_it3;
    endcase
  end
  always @* begin
    id_mux_ifload_id = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$125 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_ifload_id = ID_ifload;
    endcase
  end
  always @* begin
    id_mux_shamt_id = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$127 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          id_mux_shamt_id = ID_shamt;
    endcase
  end
  always @* begin
    forwarding_alu_s1 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$129 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_s1 = id_mux_s1;
    endcase
  end
  always @* begin
    forwarding_alu_s2 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$131 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_s2 = id_mux_s2;
    endcase
  end
  always @* begin
    forwarding_alu_s1_data = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$133 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_s1_data = id_mux_s1data_out;
    endcase
  end
  always @* begin
    forwarding_alu_s2_data = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$135 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_s2_data = id_mux_s2data_out;
    endcase
  end
  always @* begin
    forwarding_alu_des0 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$137 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_des0 = reg_file_write_addr_mem;
    endcase
  end
  always @* begin
    forwarding_alu_val0 = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$139 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_val0 = reg_file_write_data_mem;
    endcase
  end
  always @* begin
    forwarding_alu_csb0 = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$141 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_csb0 = reg_file_csb_mem;
    endcase
  end
  always @* begin
    IF_ID_pipeline_stall = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$27 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$29 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$31 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      IF_ID_pipeline_stall = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      IF_ID_pipeline_stall = stall_unit_stall;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                IF_ID_pipeline_stall = stall_unit_stall;
          endcase
    endcase
  end
  always @* begin
    forwarding_alu_web0 = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$143 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          forwarding_alu_web0 = reg_file_web_mem;
    endcase
  end
  always @* begin
    ALU_pc = 8'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$145 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_pc = pc;
    endcase
  end
  always @* begin
    ALU_Ra = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$147 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_Ra = forwarding_alu_ra;
    endcase
  end
  always @* begin
    ALU_Rb = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$149 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_Rb = forwarding_alu_rb;
    endcase
  end
  always @* begin
    ALU_reg_addr_in = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$151 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_reg_addr_in = id_mux_des;
    endcase
  end
  always @* begin
    ALU_immediate = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$153 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_immediate = id_mux_signextended_immediate;
    endcase
  end
  always @* begin
    ALU_inst_type = 3'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$155 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_inst_type = id_mux_instruction_type;
    endcase
  end
  always @* begin
    inst_type0 = 17'h00000;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$157 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          inst_type0 = id_mux_it0;
    endcase
  end
  always @* begin
    ALU_inst_type1 = 11'h000;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$159 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_inst_type1 = id_mux_it1;
    endcase
  end
  always @* begin
    ALU_inst_type2 = 11'h000;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$161 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_inst_type2 = id_mux_it2;
    endcase
  end
  always @* begin
    pc_controller_stall = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$33 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$35 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$37 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      pc_controller_stall = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      pc_controller_stall = stall_unit_stall;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                pc_controller_stall = stall_unit_stall;
          endcase
    endcase
  end
  always @* begin
    ALU_inst_type3 = 7'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$163 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_inst_type3 = id_mux_it3;
    endcase
  end
  always @* begin
    s1 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$165 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          s1 = id_mux_s1;
    endcase
  end
  always @* begin
    s2 = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$167 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          s2 = id_mux_s2;
    endcase
  end
  always @* begin
    ALU_shamt = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$169 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          ALU_shamt = id_mux_shamt;
    endcase
  end
  always @* begin
    csb_alu = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$171 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          csb_alu = ALU_csb;
    endcase
  end
  always @* begin
    csb_mem = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$173 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          csb_mem = M1_M2_pipeline_csb_out;
    endcase
  end
  always @* begin
    web = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$175 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          web = ALU_web;
    endcase
  end
  always @* begin
    data_mem_addr = 8'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$177 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          data_mem_addr = ALU_result[7:0];
    endcase
  end
  always @* begin
    wmask = 4'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$179 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          wmask = ALU_wmask;
    endcase
  end
  always @* begin
    alu_result = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$181 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          alu_result = ALU_result;
    endcase
  end
  always @* begin
    pc_controller_branch = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$39 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$41 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$43 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      pc_controller_branch = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      pc_controller_branch = ALU_branching;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                pc_controller_branch = ALU_branching;
          endcase
    endcase
  end
  always @* begin
    data_mem_wdata = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$183 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          data_mem_wdata = ALU_Rb;
    endcase
  end
  always @* begin
    M1_M2_pipeline_reg_file_write_in = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$185 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M1_M2_pipeline_reg_file_write_in = ALU_load_wb;
    endcase
  end
  always @* begin
    M1_M2_pipeline_memory_reg_addr_out_out = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$187 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M1_M2_pipeline_memory_reg_addr_out_out = ALU_reg_addr_out;
    endcase
  end
  always @* begin
    M1_M2_pipeline_s1_in = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$189 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M1_M2_pipeline_s1_in = s1;
    endcase
  end
  always @* begin
    M1_M2_pipeline_s2_in = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$191 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M1_M2_pipeline_s2_in = s2;
    endcase
  end
  always @* begin
    M1_M2_pipeline_csb_in = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$193 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M1_M2_pipeline_csb_in = ALU_csb;
    endcase
  end
  always @* begin
    M1_M2_pipeline_web_in = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$195 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M1_M2_pipeline_web_in = ALU_web;
    endcase
  end
  always @* begin
    M2_WB_pipeline_reg_file_write_in = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$197 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M2_WB_pipeline_reg_file_write_in = M1_M2_pipeline_reg_file_write_out;
    endcase
  end
  always @* begin
    M2_WB_pipeline_memory_reg_addr_out_out = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$199 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M2_WB_pipeline_memory_reg_addr_out_out = M1_M2_pipeline_reg_file_write_addr_in;
    endcase
  end
  always @* begin
    M2_WB_pipeline_memory_data_out_out = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$201 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M2_WB_pipeline_memory_data_out_out = data_mem_rdata;
    endcase
  end
  always @* begin
    pc_controller_jump = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$45 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$47 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$49 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      pc_controller_jump = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      pc_controller_jump = ALU_jump;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                pc_controller_jump = ALU_jump;
          endcase
    endcase
  end
  always @* begin
    M2_WB_pipeline_s1_in = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$203 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M2_WB_pipeline_s1_in = M1_M2_pipeline_s1_out;
    endcase
  end
  always @* begin
    M2_WB_pipeline_s2_in = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$205 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M2_WB_pipeline_s2_in = M1_M2_pipeline_s2_out;
    endcase
  end
  always @* begin
    M2_WB_pipeline_csb_in = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$207 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M2_WB_pipeline_csb_in = M1_M2_pipeline_csb_out;
    endcase
  end
  always @* begin
    M2_WB_pipeline_web_in = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$209 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          M2_WB_pipeline_web_in = M1_M2_pipeline_web_out;
    endcase
  end
  always @* begin
    reg_file_write_addr_alu = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$211 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_write_addr_alu = ALU_reg_addr_out;
    endcase
  end
  always @* begin
    reg_file_write_data_alu = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$213 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_write_data_alu = ALU_result;
    endcase
  end
  always @* begin
    reg_file_write_addr_mem = 5'h00;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$215 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_write_addr_mem = M2_WB_pipeline_reg_file_write_addr_in;
    endcase
  end
  always @* begin
    reg_file_write_data_mem = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$217 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_write_data_mem = M2_WB_pipeline_reg_file_write_data_in;
    endcase
  end
  always @* begin
    gpio_pins = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$219 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          gpio_pins = \reg_file_$signal ;
    endcase
  end
  always @* begin
    reg_file_gpio_input = 32'd0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$221 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          reg_file_gpio_input = output_pins;
    endcase
  end
  always @* begin
    id_mux_stall = 1'h0;
    (* src = "/tmp/chipcron/Wrapper_class.py:67" *)
    casez (\$51 )
      /* src = "/tmp/chipcron/Wrapper_class.py:67" */
      1'h1:
          /* empty */;
      /* src = "/tmp/chipcron/Wrapper_class.py:70" */
      default:
          (* src = "/tmp/chipcron/Wrapper_class.py:72" *)
          casez (\$53 )
            /* src = "/tmp/chipcron/Wrapper_class.py:72" */
            1'h1:
                (* src = "/tmp/chipcron/Wrapper_class.py:74" *)
                casez (\$55 )
                  /* src = "/tmp/chipcron/Wrapper_class.py:74" */
                  1'h1:
                      id_mux_stall = 1'h0;
                  /* src = "/tmp/chipcron/Wrapper_class.py:84" */
                  default:
                      id_mux_stall = stall_unit_stall;
                endcase
            /* src = "/tmp/chipcron/Wrapper_class.py:99" */
            default:
                id_mux_stall = stall_unit_stall;
          endcase
    endcase
  end
endmodule




    module sky130_sram_1kbyte_1rw1r_32x256_8_inst(
    `ifdef USE_POWER_PINS
        vccd1,
        vssd1,
    `endif
    // Port 0: RW
        clk0,csb0,web0,wmask0,addr0,din0,dout0,
    // Port 1: R
        clk1,csb1,addr1,dout1
    );

    parameter NUM_WMASKS = 4 ;
    parameter DATA_WIDTH = 32 ;
    parameter ADDR_WIDTH = 8 ;
    parameter RAM_DEPTH = 1 << ADDR_WIDTH;
    // FIXME: This delay is arbitrary.
    parameter DELAY = 0 ;
    parameter VERBOSE = 0 ; //Set to 0 to only display warnings
    parameter T_HOLD = 0 ; //Delay to hold dout value after posedge. Value is arbitrary

    `ifdef USE_POWER_PINS
        inout vccd1;
        inout vssd1;
    `endif
    input  clk0; // clock
    input   csb0; // active low chip select
    input  web0; // active low write control
    input [NUM_WMASKS-1:0]   wmask0; // write mask
    input [ADDR_WIDTH-1:0]  addr0;
    input [DATA_WIDTH-1:0]  din0;
    output [DATA_WIDTH-1:0] dout0;
    input  clk1; // clock
    input   csb1; // active low chip select
    input [ADDR_WIDTH-1:0]  addr1;
    output [DATA_WIDTH-1:0] dout1;

    reg  csb0_reg;
    reg  web0_reg;
    reg [NUM_WMASKS-1:0]   wmask0_reg;
    reg [ADDR_WIDTH-1:0]  addr0_reg;
    reg [DATA_WIDTH-1:0]  din0_reg;
    reg [DATA_WIDTH-1:0]  dout0;

    // All inputs are registers
    always @(posedge clk0)
    begin
        csb0_reg = csb0;
        web0_reg = web0;
        wmask0_reg = wmask0;
        addr0_reg = addr0;
        din0_reg = din0;
        #(T_HOLD) dout0 = 32'bx;
        // if ( !csb0_reg && web0_reg && VERBOSE ) 
        //   $display($time," Reading %m addr0=%b dout0=%b",addr0_reg,mem[addr0_reg]);
        // if ( !csb0_reg && !web0_reg && VERBOSE )
        //   $display($time," Writing %m addr0=%b din0=%b wmask0=%b",addr0_reg,din0_reg,wmask0_reg);
    end

    reg  csb1_reg;
    reg [ADDR_WIDTH-1:0]  addr1_reg;
    reg [DATA_WIDTH-1:0]  dout1;

    // All inputs are registers
    always @(posedge clk1)
    begin
        csb1_reg = csb1;
        addr1_reg = addr1;
        // if (!csb0 && !web0 && !csb1 && (addr0 == addr1))
        //      $display($time," WARNING: Writing and reading addr0=%b and addr1=%b simultaneously!",addr0,addr1);
        #(T_HOLD) dout1 = 32'bx;
        // if ( !csb1_reg && VERBOSE ) 
        //   $display($time," Reading %m addr1=%b dout1=%b",addr1_reg,mem[addr1_reg]);
    end

    reg [DATA_WIDTH-1:0]    mem [0:RAM_DEPTH-1];

    initial
    begin

    	mem[0] = 32'h00000000;
	mem[1] = 32'h00000000;
	mem[2] = 32'hff010113;
	mem[3] = 32'h00112623;
	mem[4] = 32'h00712423;
	mem[5] = 32'h01010393;
	mem[6] = 32'h8201a683;
	mem[7] = 32'h00b6a693;
	mem[8] = 32'h0016c693;
	mem[9] = 32'h0ff6f693;
	mem[10] = 32'h00068613;
	mem[11] = 32'h80c1a423;
	mem[12] = 32'h8241a683;
	mem[13] = 32'h00b6a693;
	mem[14] = 32'h0016c693;
	mem[15] = 32'h0ff6f693;
	mem[16] = 32'h00068613;
	mem[17] = 32'h000116b7;
	mem[18] = 32'h40c6aa23;
	mem[19] = 32'h8281a683;
	mem[20] = 32'h00b6a693;
	mem[21] = 32'h0016c693;
	mem[22] = 32'h0ff6f693;
	mem[23] = 32'h00068613;
	mem[24] = 32'h000116b7;
	mem[25] = 32'h40c6a823;
	mem[26] = 32'h8081a603;
	mem[27] = 32'h00100693;
	mem[28] = 32'h00d61663;
	mem[29] = 32'h218000ef;
	mem[30] = 32'hfa1ff06f;
	mem[31] = 32'h000116b7;
	mem[32] = 32'h4146a603;
	mem[33] = 32'h00100693;
	mem[34] = 32'h00d61663;
	mem[35] = 32'h0b0000ef;
	mem[36] = 32'hf89ff06f;
	mem[37] = 32'h000116b7;
	mem[38] = 32'h4106a603;
	mem[39] = 32'h00100693;
	mem[40] = 32'h00d61663;
	mem[41] = 32'h178000ef;
	mem[42] = 32'hf71ff06f;
	mem[43] = 32'h100000ef;
	mem[44] = 32'hf69ff06f;
	mem[45] = 32'hfd010113;
	mem[46] = 32'h02712623;
	mem[47] = 32'h03010393;
	mem[48] = 32'hfc83ae23;
	mem[49] = 32'hfc93ac23;
	mem[50] = 32'hfca3aa23;
	mem[51] = 32'h100006b7;
	mem[52] = 32'hfff68693;
	mem[53] = 32'hfed3a623;
	mem[54] = 32'hfec3a683;
	mem[55] = 32'h00068713;
	mem[56] = 32'h00e87233;
	mem[57] = 32'h0ff00793;
	mem[58] = 32'h00f275b3;
	mem[59] = 32'h00825293;
	mem[60] = 32'h00f2f633;
	mem[61] = 32'h01025313;
	mem[62] = 32'h00f376b3;
	mem[63] = 32'hfeb3a423;
	mem[64] = 32'hfec3a223;
	mem[65] = 32'hfed3a023;
	mem[66] = 32'hfdc3a683;
	mem[67] = 32'hfe83a603;
	mem[68] = 32'h00c6a023;
	mem[69] = 32'hfd83a683;
	mem[70] = 32'hfe43a603;
	mem[71] = 32'h00c6a023;
	mem[72] = 32'hfd43a683;
	mem[73] = 32'hfe03a603;
	mem[74] = 32'h00c6a023;
	mem[75] = 32'h00000013;
	mem[76] = 32'h02c12383;
	mem[77] = 32'h03010113;
	mem[78] = 32'h00008067;
	mem[79] = 32'hff010113;
	mem[80] = 32'h00112623;
	mem[81] = 32'h00712423;
	mem[82] = 32'h01010393;
	mem[83] = 32'h10000237;
	mem[84] = 32'hfff20213;
	mem[85] = 32'h00487833;
	mem[86] = 32'h050002b7;
	mem[87] = 32'h00586833;
	mem[88] = 32'h01000737;
	mem[89] = 32'h00e874b3;
	mem[90] = 32'h02000737;
	mem[91] = 32'h00e87533;
	mem[92] = 32'h04000737;
	mem[93] = 32'h00e875b3;
	mem[94] = 32'h08000737;
	mem[95] = 32'h00e87633;
	mem[96] = 32'h8091a623;
	mem[97] = 32'h80a1a823;
	mem[98] = 32'h80b1aa23;
	mem[99] = 32'h80c1ac23;
	mem[100] = 32'h2bc00413;
	mem[101] = 32'h1d0000ef;
	mem[102] = 32'h00000013;
	mem[103] = 32'h00c12083;
	mem[104] = 32'h00812383;
	mem[105] = 32'h01010113;
	mem[106] = 32'h00008067;
	mem[107] = 32'hff010113;
	mem[108] = 32'h00112623;
	mem[109] = 32'h00712423;
	mem[110] = 32'h01010393;
	mem[111] = 32'h10000237;
	mem[112] = 32'hfff20213;
	mem[113] = 32'h00487833;
	mem[114] = 32'h0a0002b7;
	mem[115] = 32'h00586833;
	mem[116] = 32'h01000737;
	mem[117] = 32'h00e874b3;
	mem[118] = 32'h02000737;
	mem[119] = 32'h00e87533;
	mem[120] = 32'h04000737;
	mem[121] = 32'h00e875b3;
	mem[122] = 32'h08000737;
	mem[123] = 32'h00e87633;
	mem[124] = 32'h8091a623;
	mem[125] = 32'h80a1a823;
	mem[126] = 32'h80b1aa23;
	mem[127] = 32'h80c1ac23;
	mem[128] = 32'h57800413;
	mem[129] = 32'h160000ef;
	mem[130] = 32'h00000013;
	mem[131] = 32'h00c12083;
	mem[132] = 32'h00812383;
	mem[133] = 32'h01010113;
	mem[134] = 32'h00008067;
	mem[135] = 32'hff010113;
	mem[136] = 32'h00112623;
	mem[137] = 32'h00712423;
	mem[138] = 32'h01010393;
	mem[139] = 32'h10000237;
	mem[140] = 32'hfff20213;
	mem[141] = 32'h00487833;
	mem[142] = 32'h060002b7;
	mem[143] = 32'h00586833;
	mem[144] = 32'h01000737;
	mem[145] = 32'h00e874b3;
	mem[146] = 32'h02000737;
	mem[147] = 32'h00e87533;
	mem[148] = 32'h04000737;
	mem[149] = 32'h00e875b3;
	mem[150] = 32'h08000737;
	mem[151] = 32'h00e87633;
	mem[152] = 32'h8091a623;
	mem[153] = 32'h80a1a823;
	mem[154] = 32'h80b1aa23;
	mem[155] = 32'h80c1ac23;
	mem[156] = 32'h2bc00413;
	mem[157] = 32'h0f0000ef;
	mem[158] = 32'h00000013;
	mem[159] = 32'h00c12083;
	mem[160] = 32'h00812383;
	mem[161] = 32'h01010113;
	mem[162] = 32'h00008067;
	mem[163] = 32'hff010113;
	mem[164] = 32'h00112623;
	mem[165] = 32'h00712423;
	mem[166] = 32'h01010393;
	mem[167] = 32'h10000237;
	mem[168] = 32'hfff20213;
	mem[169] = 32'h00487833;
	mem[170] = 32'h090002b7;
	mem[171] = 32'h00586833;
	mem[172] = 32'h01000737;
	mem[173] = 32'h00e874b3;
	mem[174] = 32'h02000737;
	mem[175] = 32'h00e87533;
	mem[176] = 32'h04000737;
	mem[177] = 32'h00e875b3;
	mem[178] = 32'h08000737;
	mem[179] = 32'h00e87633;
	mem[180] = 32'h8091a623;
	mem[181] = 32'h80a1a823;
	mem[182] = 32'h80b1aa23;
	mem[183] = 32'h80c1ac23;
	mem[184] = 32'h57800413;
	mem[185] = 32'h080000ef;
	mem[186] = 32'h00000013;
	mem[187] = 32'h00c12083;
	mem[188] = 32'h00812383;
	mem[189] = 32'h01010113;
	mem[190] = 32'h00008067;
	mem[191] = 32'hff010113;
	mem[192] = 32'h00112623;
	mem[193] = 32'h00712423;
	mem[194] = 32'h01010393;
	mem[195] = 32'h10000237;
	mem[196] = 32'hfff20213;
	mem[197] = 32'h00487833;
	mem[198] = 32'h01000737;
	mem[199] = 32'h00e874b3;
	mem[200] = 32'h02000737;
	mem[201] = 32'h00e87533;
	mem[202] = 32'h04000737;
	mem[203] = 32'h00e875b3;
	mem[204] = 32'h08000737;
	mem[205] = 32'h00e87633;
	mem[206] = 32'h8091a623;
	mem[207] = 32'h80a1a823;
	mem[208] = 32'h80b1aa23;
	mem[209] = 32'h80c1ac23;
	mem[210] = 32'h57800413;
	mem[211] = 32'h018000ef;
	mem[212] = 32'h00000013;
	mem[213] = 32'h00c12083;
	mem[214] = 32'h00812383;
	mem[215] = 32'h01010113;
	mem[216] = 32'h00008067;
	mem[217] = 32'hfd010113;
	mem[218] = 32'h02712623;
	mem[219] = 32'h03010393;
	mem[220] = 32'hfc83ae23;
	mem[221] = 32'hfe03a623;
	mem[222] = 32'h0100006f;
	mem[223] = 32'hfec3a683;
	mem[224] = 32'h00168693;
	mem[225] = 32'hfed3a623;
	mem[226] = 32'hfec3a603;
	mem[227] = 32'hfdc3a683;
	mem[228] = 32'hfed646e3;
	mem[229] = 32'h00000013;
	mem[230] = 32'h02c12383;
	mem[231] = 32'h03010113;
	mem[232] = 32'h00008067;
	mem[233] = 32'hffffffff;
	mem[234] = 32'hffffffff;

    end

    // Memory Write Block Port 0
    // Write Operation : When web0 = 0, csb0 = 0
    always @ (negedge clk0)
    begin : MEM_WRITE0
        if ( !csb0_reg && !web0_reg ) begin
            if (wmask0_reg[0])
                    mem[addr0_reg][7:0] = din0_reg[7:0];
            if (wmask0_reg[1])
                    mem[addr0_reg][15:8] = din0_reg[15:8];
            if (wmask0_reg[2])
                    mem[addr0_reg][23:16] = din0_reg[23:16];
            if (wmask0_reg[3])
                    mem[addr0_reg][31:24] = din0_reg[31:24];
        end
    end

    // Memory Read Block Port 0
    // Read Operation : When web0 = 1, csb0 = 0
    always @ (negedge clk0)
    begin : MEM_READ0
        if (!csb0_reg && web0_reg)
        dout0 = #(DELAY) mem[addr0_reg];
    end

    // Memory Read Block Port 1
    // Read Operation : When web1 = 1, csb1 = 0
    always @ (negedge clk1)
    begin : MEM_READ1
        if (!csb1_reg)
        dout1 = #(DELAY) mem[addr1_reg];
    end

    endmodule


    module sky130_sram_1kbyte_1rw1r_32x256_8_data(
    `ifdef USE_POWER_PINS
        vccd1,
        vssd1,
    `endif
    // Port 0: RW
        clk0,csb0,web0,wmask0,addr0,din0,dout0,
    // Port 1: R
        clk1,csb1,addr1,dout1
    );

    parameter NUM_WMASKS = 4 ;
    parameter DATA_WIDTH = 32 ;
    parameter ADDR_WIDTH = 8 ;
    parameter RAM_DEPTH = 1 << ADDR_WIDTH;
    // FIXME: This delay is arbitrary.
    parameter DELAY = 0 ;
    parameter VERBOSE = 0 ; //Set to 0 to only display warnings
    parameter T_HOLD = 0 ; //Delay to hold dout value after posedge. Value is arbitrary

    `ifdef USE_POWER_PINS
        inout vccd1;
        inout vssd1;
    `endif
    input  clk0; // clock
    input   csb0; // active low chip select
    input  web0; // active low write control
    input [NUM_WMASKS-1:0]   wmask0; // write mask
    input [ADDR_WIDTH-1:0]  addr0;
    input [DATA_WIDTH-1:0]  din0;
    output [DATA_WIDTH-1:0] dout0;
    input  clk1; // clock
    input   csb1; // active low chip select
    input [ADDR_WIDTH-1:0]  addr1;
    output [DATA_WIDTH-1:0] dout1;

    reg  csb0_reg;
    reg  web0_reg;
    reg [NUM_WMASKS-1:0]   wmask0_reg;
    reg [ADDR_WIDTH-1:0]  addr0_reg;
    reg [DATA_WIDTH-1:0]  din0_reg;
    reg [DATA_WIDTH-1:0]  dout0;

    // All inputs are registers
    always @(posedge clk0)
    begin
        csb0_reg = csb0;
        web0_reg = web0;
        wmask0_reg = wmask0;
        addr0_reg = addr0;
        din0_reg = din0;
        #(T_HOLD) dout0 = 32'bx;
        // if ( !csb0_reg && web0_reg && VERBOSE ) 
        //   $display($time," Reading %m addr0=%b dout0=%b",addr0_reg,mem[addr0_reg]);
        // if ( !csb0_reg && !web0_reg && VERBOSE )
        //   $display($time," Writing %m addr0=%b din0=%b wmask0=%b",addr0_reg,din0_reg,wmask0_reg);
    end

    reg  csb1_reg;
    reg [ADDR_WIDTH-1:0]  addr1_reg;
    reg [DATA_WIDTH-1:0]  dout1;

    // All inputs are registers
    always @(posedge clk1)
    begin
        csb1_reg = csb1;
        addr1_reg = addr1;
        // if (!csb0 && !web0 && !csb1 && (addr0 == addr1))
        //      $display($time," WARNING: Writing and reading addr0=%b and addr1=%b simultaneously!",addr0,addr1);
        #(T_HOLD) dout1 = 32'bx;
        // if ( !csb1_reg && VERBOSE ) 
        //   $display($time," Reading %m addr1=%b dout1=%b",addr1_reg,mem[addr1_reg]);
    end

    reg [DATA_WIDTH-1:0]    mem [0:RAM_DEPTH-1];

    // Memory Write Block Port 0
    // Write Operation : When web0 = 0, csb0 = 0
    always @ (negedge clk0)
    begin : MEM_WRITE0
        if ( !csb0_reg && !web0_reg ) begin
            if (wmask0_reg[0])
                    mem[addr0_reg][7:0] = din0_reg[7:0];
            if (wmask0_reg[1])
                    mem[addr0_reg][15:8] = din0_reg[15:8];
            if (wmask0_reg[2])
                    mem[addr0_reg][23:16] = din0_reg[23:16];
            if (wmask0_reg[3])
                    mem[addr0_reg][31:24] = din0_reg[31:24];
        end
    end

    // Memory Read Block Port 0
    // Read Operation : When web0 = 1, csb0 = 0
    always @ (negedge clk0)
    begin : MEM_READ0
        if (!csb0_reg && web0_reg)
        dout0 = #(DELAY) mem[addr0_reg];
    end

    // Memory Read Block Port 1
    // Read Operation : When web1 = 1, csb1 = 0
    always @ (negedge clk1)
    begin : MEM_READ1
        if (!csb1_reg)
        dout1 = #(DELAY) mem[addr1_reg];
    end

    endmodule

    module uart_rx(
    input  wire       clk          , // Top level system clock input.
    input  wire       resetn       , // Asynchronous active low reset.
    input  wire       uart_rxd     , // UART Recieve pin.
    input  wire       uart_rx_en   , // Recieve enable
    output wire       uart_rx_break, // Did we get a BREAK message?
    output wire       uart_rx_valid, // Valid data recieved and available.
    output reg  [8-1:0] uart_rx_data   // The recieved data.
    );

    // --------------------------------------------------------------------------- 
    // External parameters.
    // 

    //
    // Input bit rate of the UART line.
    parameter   BIT_RATE        = 9600; // bits / sec
    localparam  BIT_P           = 1_000_000_000 * 1/BIT_RATE; // nanoseconds

    //
    // Clock frequency in hertz.
    parameter   CLK_HZ          =    50_000_000;
    localparam  CLK_P           = 1_000_000_000 * 1/CLK_HZ; // nanoseconds

    //
    // Number of data bits recieved per UART packet.
    parameter   PAYLOAD_BITS    = 8;

    //
    // Number of stop bits indicating the end of a packet.
    parameter   STOP_BITS       = 1;

    // -------------------------------------------------------------------------- 
    // Internal parameters.
    // 

    //
    // Number of clock cycles per uart bit.
    localparam       CYCLES_PER_BIT     = BIT_P / CLK_P;

    //
    // Size of the registers which store sample counts and bit durations.
    localparam       COUNT_REG_LEN      = 1+$clog2(CYCLES_PER_BIT);

    // -------------------------------------------------------------------------- 
    // Internal registers.
    // 

    //
    // Internally latched value of the uart_rxd line. Helps break long timing
    // paths from input pins into the logic.
    reg rxd_reg;
    reg rxd_reg_0;

    //
    // Storage for the recieved serial data.
    reg [PAYLOAD_BITS-1:0] recieved_data;

    //
    // Counter for the number of cycles over a packet bit.
    reg [COUNT_REG_LEN-1:0] cycle_counter;

    //
    // Counter for the number of recieved bits of the packet.
    reg [3:0] bit_counter;

    //
    // Sample of the UART input line whenever we are in the middle of a bit frame.
    reg bit_sample;

    //
    // Current and next states of the internal FSM.
    reg [2:0] fsm_state;
    reg [2:0] n_fsm_state;

    localparam FSM_IDLE = 0;
    localparam FSM_START= 1;
    localparam FSM_RECV = 2;
    localparam FSM_STOP = 3;

    // --------------------------------------------------------------------------- 
    // Output assignment
    // 

    assign uart_rx_break = uart_rx_valid && ~|recieved_data;
    assign uart_rx_valid = fsm_state == FSM_STOP && n_fsm_state == FSM_IDLE;

    always @(posedge clk) begin
        if(!resetn) begin
            uart_rx_data  <= {PAYLOAD_BITS{1'b0}};
        end else if (fsm_state == FSM_STOP) begin
            uart_rx_data  <= recieved_data;
        end
    end

    // --------------------------------------------------------------------------- 
    // FSM next state selection.
    // 

    wire next_bit     = cycle_counter == CYCLES_PER_BIT ||
                            fsm_state       == FSM_STOP && 
                            cycle_counter   == CYCLES_PER_BIT/2;
    wire payload_done = bit_counter   == PAYLOAD_BITS  ;

    //
    // Handle picking the next state.
    always @(*) begin : p_n_fsm_state
        case(fsm_state)
            FSM_IDLE : n_fsm_state = rxd_reg      ? FSM_IDLE : FSM_START;
            FSM_START: n_fsm_state = next_bit     ? FSM_RECV : FSM_START;
            FSM_RECV : n_fsm_state = payload_done ? FSM_STOP : FSM_RECV ;
            FSM_STOP : n_fsm_state = next_bit     ? FSM_IDLE : FSM_STOP ;
            default  : n_fsm_state = FSM_IDLE;
        endcase
    end

    // --------------------------------------------------------------------------- 
    // Internal register setting and re-setting.
    // 

    //
    // Handle updates to the recieved data register.
    integer i = 0;
    always @(posedge clk) begin : p_recieved_data
        if(!resetn) begin
            recieved_data <= {PAYLOAD_BITS{1'b0}};
        end else if(fsm_state == FSM_IDLE             ) begin
            recieved_data <= {PAYLOAD_BITS{1'b0}};
        end else if(fsm_state == FSM_RECV && next_bit ) begin
            recieved_data[PAYLOAD_BITS-1] <= bit_sample;
            for ( i = PAYLOAD_BITS-2; i >= 0; i = i - 1) begin
                recieved_data[i] <= recieved_data[i+1];
            end
        end
    end

    //
    // Increments the bit counter when recieving.
    always @(posedge clk) begin : p_bit_counter
        if(!resetn) begin
            bit_counter <= 4'b0;
        end else if(fsm_state != FSM_RECV) begin
            bit_counter <= {COUNT_REG_LEN{1'b0}};
        end else if(fsm_state == FSM_RECV && next_bit) begin
            bit_counter <= bit_counter + 1'b1;
        end
    end

    //
    // Sample the recieved bit when in the middle of a bit frame.
    always @(posedge clk) begin : p_bit_sample
        if(!resetn) begin
            bit_sample <= 1'b0;
        end else if (cycle_counter == CYCLES_PER_BIT/2) begin
            bit_sample <= rxd_reg;
        end
    end


    //
    // Increments the cycle counter when recieving.
    always @(posedge clk) begin : p_cycle_counter
        if(!resetn) begin
            cycle_counter <= {COUNT_REG_LEN{1'b0}};
        end else if(next_bit) begin
            cycle_counter <= {COUNT_REG_LEN{1'b0}};
        end else if(fsm_state == FSM_START || 
                    fsm_state == FSM_RECV  || 
                    fsm_state == FSM_STOP   ) begin
            cycle_counter <= cycle_counter + 1'b1;
        end
    end


    //
    // Progresses the next FSM state.
    always @(posedge clk) begin : p_fsm_state
        if(!resetn) begin
            fsm_state <= FSM_IDLE;
        end else begin
            fsm_state <= n_fsm_state;
        end
    end


    //
    // Responsible for updating the internal value of the rxd_reg.
    always @(posedge clk) begin : p_rxd_reg
        if(!resetn) begin
            rxd_reg     <= 1'b1;
            rxd_reg_0   <= 1'b1;
        end else if(uart_rx_en) begin
            rxd_reg     <= rxd_reg_0;
            rxd_reg_0   <= uart_rxd;
        end
    end


    endmodule

    module wrapper(clk,resetn,uart_rxd,uart_rx_en,uart_rx_break,uart_rx_valid,uart_rx_data, Motor1A,Motor1B,Motor2A,Motor2B, Sensors, write_done, instructions);
    input clk;
    output reg write_done ; 
    output reg [2:0] instructions ; 
    input wire [23:0] Sensors;
    output reg Motor1A,Motor1B,Motor2A,Motor2B;
    reg rst;
    reg neg_clk; 
    reg neg_rst; 
    input  resetn       ; // Asynchronous active low reset.
    input  uart_rxd     ; // UART Recieve pin.
    input  uart_rx_en   ; // Recieve enable
    output uart_rx_break; // Did we get a BREAK message?
    output uart_rx_valid; // Valid data recieved and available.
    output [7:0] uart_rx_data  ; // The recieved data.


    wire web;
    wire [7:0]inst_mem_addr;
    wire [7:0] data_mem_addr;
    wire [31:0]data_mem_wdata;
    wire [3:0]mem_wstrb;
    wire [31:0] inst_mem_rdata;
    wire [31:0] inst_mem_rdata_dummy;
    reg [31:0] inst_mem_rdata_reg;
    wire [31:0] data_mem_rdata; 
    wire [31:0] data_mem_rdata_dummy; 
    reg [31:0] data_mem_rdata_reg;

    wire [3:0] wmask; 
    wire csb_mem;
    wire csb_alu;

    reg temp_web;
    reg temp_csb;

    reg [31:0]instruction;

    parameter zero = 1'b0;
    parameter one = 1'b1;

    reg[7:0]write_inst_count;
    reg writing_inst_done;
    wire uart_rx_valid;
    wire [31:0] alu_result ; 

    wire [31:0] top_gpio_pins; 


    reg [1:0]inst_byte_count;
    reg inst_flag;// active low as write enable of sram is active low 

    always@(*)
    begin 
        neg_clk = ~clk; 
        rst = ~resetn ; 
        neg_rst = ~resetn; 
    end 

    // reg [2:0] count = 3'b0; // 3-bit counter to divide by 5
    // reg clk = 0; 

    // always @(posedge clk_in) begin
    //   // if (rst == 1) begin 
    //   //   clk <=0; 
    //   // end 
    //   // else begin 
    //   if (count == 3'b100) begin
    //     count <= 3'b0;            // Reset the counter
    //     clk <= ~clk; // Toggle the output clock
    //   end else begin
    //     count <= count + 1;       // Increment the counter
    //     clk <= clk; // Output clock remains unchanged
    //   end
    // // end 
    // end


    reg [31:0] output_pins ; 

    always@(posedge clk)
    begin

        if(rst==1)
        begin 
            writing_inst_done=1;
            write_inst_count=0;
            instruction=0;
            inst_byte_count=0;
            inst_flag=1;
            
        end
        else 
        begin
            if(writing_inst_done==0)
            begin
                inst_flag=1;
                
                
                if(uart_rx_valid==1)
                begin
                    //inst_flag=1;
                    inst_byte_count = inst_byte_count+1;
                    if(inst_byte_count==1)
                    instruction[7:0]=uart_rx_data;
                    else if(inst_byte_count==2)
                    instruction[15:8]=uart_rx_data;
                    else if(inst_byte_count==3)
                    instruction[23:16]=uart_rx_data;
                    
                    // instruction = {o_Rx_Byte,instruction};
                    
                    else//byte count=4
                    begin
                        instruction[31:24]=uart_rx_data;
                        inst_flag=0;
                        inst_byte_count=0;
                        write_inst_count=write_inst_count+1;
                        if(instruction==32'b11111111111111111111111111111111)
                        begin
                        inst_flag=1;
                        writing_inst_done=1;
                        //write_inst_count<=inst_mem_addr;
                        end
                    end
                end
                temp_web=inst_flag;
                temp_csb=inst_flag;
            end
            else//(writing_inst_done==1)
            begin
                write_inst_count=inst_mem_addr;
                //starting to read 
                temp_web=1;//same as csb not proper 
                temp_csb=0;//csb from top module is not proper so hardwiring it to 0

                    
            end
        end
    end

    // (* blackbox *)
    top top_inst(.web(web), 
                .inst_mem_addr(inst_mem_addr), 
                .data_mem_addr(data_mem_addr),
                .data_mem_wdata(data_mem_wdata),
                .wmask(wmask), 
                .inst_mem_rdata(inst_mem_rdata_reg), 
                .data_mem_rdata(data_mem_rdata_reg),
                .neg_clk(neg_clk), 
                .neg_rst(neg_rst), 
                .clk(clk),
                .rst(rst), 
                .csb_mem(csb_mem),
                .csb_alu(csb_alu),
                .read_flag(writing_inst_done), 
                .alu_result(alu_result), 
                .gpio_pins(top_gpio_pins),  
                .output_pins(output_pins));


    // (* blackbox *)
    uart_rx uart_inst(.clk(clk)          , // Top level system clock input.
    .resetn(resetn)       , // Asynchronous active low reset.
    .uart_rxd(uart_rxd)     , // UART Recieve pin.
    .uart_rx_en(uart_rx_en)   , // Recieve enable
    .uart_rx_break(uart_rx_break), // Did we get a BREAK message?
    .uart_rx_valid(uart_rx_valid), // Valid data recieved and available.
    .uart_rx_data(uart_rx_data) );  // The recieved data.)



    // (* blackbox *)
    sky130_sram_1kbyte_1rw1r_32x256_8_inst inst_mem(
    .clk0(clk),// clock
    .csb0(temp_csb), // active low chip select
    .web0(temp_web), // active low write control
    .wmask0(4'b1111), // write mask
    .addr0(write_inst_count),
    .din0(instruction),
    .dout0(inst_mem_rdata),

    //not using 
    .clk1(1'b0), // clock
    .csb1(1'b1), // active low chip select
    .addr1(write_inst_count),
    .dout1(inst_mem_rdata_dummy)
    );

    //data mem
    // (* blackbox *)
    sky130_sram_1kbyte_1rw1r_32x256_8_data data_mem(
    .clk0(clk), // clock
    .csb0(csb_alu), // active low chip select
    .web0(web), // active low write control
    .wmask0(wmask), // write mask
    .addr0(data_mem_addr),
    .din0(data_mem_wdata),
    .dout0(data_mem_rdata),

    //not using 
    .clk1(1'b0), // clock
    .csb1(1'b1), // active low chip select
    .addr1(write_inst_count),
    .dout1(data_mem_rdata_dummy)
    );
    //sram_1rw0r0w_32_1024_sky130A_icache sram_instr_inst(.clk0(clk),.csb0(temp_csb),.web0(temp_web),.addr0(write_inst_count[9:0]),.din0(instruction),.dout0(inst_mem_rdata));
    //sram_1rw0r0w_32_1024_sky130A_dcache sram_data_inst(.clk0(clk),.csb0(csb),.web0(web),.addr0(data_mem_addr[9:0]),.din0(data_mem_wdata),.dout0(data_mem_rdata));

    always@(*) 
    begin 
        if(csb_mem == 0)
        begin 
            data_mem_rdata_reg = data_mem_rdata; 
        end 
        else 
        begin 
            data_mem_rdata_reg = alu_result; 
        end 
    end 



    always@(posedge clk)
    begin 
        inst_mem_rdata_reg = inst_mem_rdata; 
        // data_mem_rdata_reg = data_mem_rdata;

    end 

    always @(posedge clk) 
    begin
     output_pins = {4'b0,top_gpio_pins[27:26],top_gpio_pins[25:24],Sensors} ; 
    Motor1A= top_gpio_pins[24]; 
    Motor1B= top_gpio_pins[25]; 
    Motor2A= top_gpio_pins[26]; 
    Motor2B= top_gpio_pins[27]; 
    write_done = writing_inst_done ; 
    instructions = write_inst_count[2:0]; 

    end 

    endmodule
    
